[
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class OpenAiClient",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L31"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly apiKey?: Redacted.Redacted | undefined; readonly apiUrl?: string | undefined; readonly organizationId?: Redacted.Redacted | undefined; readonly projectId?: Redacted.Redacted | undefined; readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined; }) => Effect.Effect<OpenAiClient.Service, never, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L65"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly apiKey?: Redacted.Redacted | undefined; readonly apiUrl?: string | undefined; readonly organizationId?: Redacted.Redacted | undefined; readonly projectId?: Redacted.Redacted | undefined; readonly transformClient?: (client: HttpClient.HttpClient) => HttpClient.HttpClient; }) => Layer.Layer<OpenAiClient, never, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L245"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "layerConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layerConfig: (options: Config.Config.Wrap<{ readonly apiKey?: Redacted.Redacted | undefined; readonly apiUrl?: string | undefined; readonly organizationId?: Redacted.Redacted | undefined; readonly projectId?: Redacted.Redacted | undefined; readonly transformClient?: (client: HttpClient.HttpClient) => HttpClient.HttpClient; }>) => Layer.Layer<OpenAiClient, ConfigError, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L257"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "StreamCompletionRequest",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type StreamCompletionRequest = Omit<typeof Generated.CreateChatCompletionRequest.Encoded, \"stream\">",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L59"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiClient.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface Service {\n    readonly client: Generated.Client\n    readonly streamRequest: <A>(\n      request: HttpClientRequest.HttpClientRequest\n    ) => Stream.Stream<A, HttpClientError.HttpClientError>\n    readonly stream: (\n      request: StreamCompletionRequest\n    ) => Stream.Stream<AiResponse.AiResponse, HttpClientError.HttpClientError>\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L44"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiConfig.ts",
      "path": "src/OpenAiConfig.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class OpenAiConfig",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiConfig.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiConfig.ts",
      "path": "src/OpenAiConfig.ts"
    },
    "project": "@effect/ai-openai",
    "name": "withClientTransform",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "declare const withClientTransform: { (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiConfig.ts#L43"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiConfig.ts",
      "path": "src/OpenAiConfig.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiConfig.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.",
    "category": "Models",
    "signature": "export interface Service {\n    readonly transformClient?: (client: HttpClient) => HttpClient\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiConfig.ts#L34"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class Config",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L32"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "withConfigOverride",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "declare const withConfigOverride: { (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L204"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "declare const model: (model: (string & {}) | Model, config: Simplify<(({ readonly mode: \"batched\"; } & Config.Batched) | ({ readonly mode: \"data-loader\"; } & Config.DataLoader))>) => AiModel.AiModel<AiEmbeddingModel.AiEmbeddingModel | Tokenizer.Tokenizer, OpenAiClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L97"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type Model = typeof Generated.CreateEmbeddingRequestModelEnum.Encoded",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L22"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.",
    "category": "Configuration",
    "signature": "export interface Service extends\n    Simplify<\n      Partial<\n        Omit<\n          typeof Generated.CreateEmbeddingRequest.Encoded,\n          \"input\"\n        >\n      >\n    >\n  {}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L53"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config.Batched",
    "deprecated": false,
    "examples": [],
    "since": "1.0.",
    "category": "Configuration",
    "signature": "export interface Batched extends Omit<Config.Service, \"model\"> {\n    readonly maxBatchSize?: number\n    readonly cache?: {\n      readonly capacity: number\n      readonly timeToLive: Duration.DurationInput\n    }\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L68"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config.DataLoader",
    "deprecated": false,
    "examples": [],
    "since": "1.0.",
    "category": "Configuration",
    "signature": "export interface DataLoader extends Omit<Config.Service, \"model\"> {\n    readonly window: Duration.DurationInput\n    readonly maxBatchSize?: number\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L80"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class Config",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L43"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ProviderMetadata",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class ProviderMetadata",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L84"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "withConfigOverride",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "declare const withConfigOverride: { (overrides: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, overrides: Config.Service): Effect.Effect<A, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L265"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "AI Models",
    "signature": "declare const model: (model: (string & {}) | Model, config?: Omit<Config.Service, \"model\">) => AiModel.AiModel<AiLanguageModel.AiLanguageModel | Tokenizer.Tokenizer, OpenAiClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L143"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type Model = typeof Generated.ModelIdsSharedEnum.Encoded",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L33"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface Service extends\n    Simplify<\n      Partial<\n        Omit<\n          typeof Generated.CreateChatCompletionRequest.Encoded,\n          \"messages\" | \"tools\" | \"tool_choice\" | \"stream\" | \"stream_options\" | \"functions\"\n        >\n      >\n    >\n  {}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L64"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ProviderMetadata.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Provider Metadata",
    "signature": "export interface Service {\n    /**\n     * Specifies the latency tier that was used for processing the request.\n     */\n    readonly serviceTier?: string\n    /**\n     * This fingerprint represents the backend configuration that the model\n     * executes with.\n     *\n     * Can be used in conjunction with the seed request parameter to understand\n     * when backend changes have been made that might impact determinism.\n     */\n    readonly systemFingerprint: string\n    /**\n     * When using predicted outputs, the number of tokens in the prediction\n     * that appeared in the completion.\n     */\n    readonly acceptedPredictionTokens: number\n    /**\n     * When using predicted outputs, the number of tokens in the prediction\n     * that did not appear in the completion. However, like reasoning tokens,\n     * these tokens are still counted in the total completion tokens for\n     * purposes of billing, output, and context window limits.\n     */\n    readonly rejectedPredictionTokens: number\n    /**\n     * Audio tokens present in the prompt.\n     */\n    readonly inputAudioTokens: number\n    /**\n     * Audio tokens generated by the model.\n     */\n    readonly outputAudioTokens: number\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L97"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "addGenAIAnnotations",
    "description": "Applies the specified OpenAi GenAI telemetry attributes to the provided\n`Span`.\n\n**NOTE**: This method will mutate the `Span` **in-place**.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const addGenAIAnnotations: ((options: OpenAiTelemetryAttributeOptions) => (span: Span) => void) & ((span: Span, options: OpenAiTelemetryAttributeOptions) => void)",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L123"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "RequestAttributes",
    "description": "Telemetry attributes which are part of the GenAI specification and are\nnamespaced by `gen_ai.openai.request`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface RequestAttributes {\n  /**\n   * The response format that is requested.\n   */\n  readonly responseFormat?: (string & {}) | WellKnownResponseFormat | null | undefined\n  /**\n   * The service tier requested. May be a specific tier, `default`, or `auto`.\n   */\n  readonly serviceTier?: (string & {}) | WellKnownServiceTier | null | undefined\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L42"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseAttributes",
    "description": "Telemetry attributes which are part of the GenAI specification and are\nnamespaced by `gen_ai.openai.response`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface ResponseAttributes {\n  /**\n   * The service tier used for the response.\n   */\n  readonly serviceTier?: string | null | undefined\n  /**\n   * A fingerprint to track any eventual change in the Generative AI\n   * environment.\n   */\n  readonly systemFingerprint?: string | null | undefined\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L60"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiTelemetryAttributes",
    "description": "The attributes used to describe telemetry in the context of Generative\nArtificial Intelligence (GenAI) Models requests and responses.\n\n{@see https://opentelemetry.io/docs/specs/semconv/attributes-registry/gen-ai/}",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type OpenAiTelemetryAttributes = Simplify<\n  & AiTelemetry.GenAITelemetryAttributes\n  & AiTelemetry.AttributesWithPrefix<RequestAttributes, \"gen_ai.openai.request\">\n  & AiTelemetry.AttributesWithPrefix<ResponseAttributes, \"gen_ai.openai.request\">\n>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L20"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "AllAttributes",
    "description": "All telemetry attributes which are part of the GenAI specification,\nincluding the OpenAi-specific attributes.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type AllAttributes = AiTelemetry.AllAttributes & RequestAttributes & ResponseAttributes",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L33"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "WellKnownResponseFormat",
    "description": "The `gen_ai.openai.request.response_format` attribute has the following\nlist of well-known values.\n\nIf one of them applies, then the respective value **MUST** be used;\notherwise, a custom value **MAY** be used.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type WellKnownResponseFormat = \"json_object\" | \"json_schema\" | \"text\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L82"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "WellKnownServiceTier",
    "description": "The `gen_ai.openai.request.service_tier` attribute has the following\nlist of well-known values.\n\nIf one of them applies, then the respective value **MUST** be used;\notherwise, a custom value **MAY** be used.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type WellKnownServiceTier = \"auto\" | \"default\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L94"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiTelemetryAttributeOptions",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "type OpenAiTelemetryAttributeOptions = AiTelemetry.GenAITelemetryAttributeOptions & {\n  openai?: {\n    request?: RequestAttributes | undefined\n    response?: ResponseAttributes | undefined\n  } | undefined\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L100"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiTokenizer.ts",
      "path": "src/OpenAiTokenizer.ts"
    },
    "project": "@effect/ai-openai",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly model: string; }) => Tokenizer.Tokenizer.Service",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTokenizer.ts#L18"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiTokenizer.ts",
      "path": "src/OpenAiTokenizer.ts"
    },
    "project": "@effect/ai-openai",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly model: string; }) => Layer.Layer<Tokenizer.Tokenizer>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTokenizer.ts#L70"
  }
]