[
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Generated",
    "description": "Re-exports all named exports from the \"./Generated.js\" module as `Generated`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as Generated from \"./Generated.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/index.ts#L4"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiClient",
    "description": "Re-exports all named exports from the \"./OpenAiClient.js\" module as `OpenAiClient`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as OpenAiClient from \"./OpenAiClient.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/index.ts#L9"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiConfig",
    "description": "Re-exports all named exports from the \"./OpenAiConfig.js\" module as `OpenAiConfig`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as OpenAiConfig from \"./OpenAiConfig.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/index.ts#L14"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiEmbeddingModel",
    "description": "Re-exports all named exports from the \"./OpenAiEmbeddingModel.js\" module as `OpenAiEmbeddingModel`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as OpenAiEmbeddingModel from \"./OpenAiEmbeddingModel.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/index.ts#L19"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiLanguageModel",
    "description": "Re-exports all named exports from the \"./OpenAiLanguageModel.js\" module as `OpenAiLanguageModel`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as OpenAiLanguageModel from \"./OpenAiLanguageModel.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/index.ts#L24"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiTelemetry",
    "description": "Re-exports all named exports from the \"./OpenAiTelemetry.js\" module as `OpenAiTelemetry`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as OpenAiTelemetry from \"./OpenAiTelemetry.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/index.ts#L29"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiTokenizer",
    "description": "Re-exports all named exports from the \"./OpenAiTokenizer.js\" module as `OpenAiTokenizer`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as OpenAiTokenizer from \"./OpenAiTokenizer.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/index.ts#L34"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiTool",
    "description": "Re-exports all named exports from the \"./OpenAiTool.js\" module as `OpenAiTool`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as OpenAiTool from \"./OpenAiTool.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/index.ts#L39"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class OpenAiClient",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L25"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseCreatedEvent",
    "description": "An event that is emitted when a response is created.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseCreatedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L264"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseQueuedEvent",
    "description": "Emitted when a response is queued and waiting to be processed.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseQueuedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L287"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseInProgressEvent",
    "description": "Emitted when the response is in progress.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseInProgressEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L310"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseCompletedEvent",
    "description": "Emitted when the model response is complete.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseCompletedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L333"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseIncompleteEvent",
    "description": "An event that is emitted when a response finishes as incomplete.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseIncompleteEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L356"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseFailedEvent",
    "description": "An event that is emitted when a response fails.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseFailedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L379"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseOutputItemAddedEvent",
    "description": "Emitted when a new output item is added.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseOutputItemAddedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L402"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseOutputItemDoneEvent",
    "description": "Emitted when an output item is marked done.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseOutputItemDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L429"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseContentPartAddedEvent",
    "description": "Emitted when a new content part is added.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseContentPartAddedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L456"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseContentPartDoneEvent",
    "description": "Emitted when a content part is done.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseContentPartDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L491"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "LogProbs",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class LogProbs",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L524"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseOutputTextDeltaEvent",
    "description": "Emitted when there is an additional text delta.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseOutputTextDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L556"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseOutputTextDoneEvent",
    "description": "Emitted when text content is finalized.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseOutputTextDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L595"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseOutputTextAnnotationAddedEvent",
    "description": "Emitted when an annotation is added to output text content.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseOutputTextAnnotationAddedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L634"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseRefusalDeltaEvent",
    "description": "Emitted when there is a partial refusal text.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseRefusalDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L673"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseRefusalDoneEvent",
    "description": "Emitted when refusal text is finalized.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseRefusalDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L708"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseFunctionCallArgumentsDeltaEvent",
    "description": "Emitted when there is a partial function-call arguments delta.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseFunctionCallArgumentsDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L743"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseFunctionCallArgumentsDoneEvent",
    "description": "Emitted when function-call arguments are finalized.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseFunctionCallArgumentsDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L774"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseFileSearchCallInProgressEvent",
    "description": "Emitted when a file search call is initiated.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseFileSearchCallInProgressEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L805"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseFileSearchCallSearchingEvent",
    "description": "Emitted when a file search is currently searching.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseFileSearchCallSearchingEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L832"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseFileSearchCallCompletedEvent",
    "description": "Emitted when a file search call is completed (results found).",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseFileSearchCallCompletedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L859"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseWebSearchCallInProgressEvent",
    "description": "Emitted when a web search call is initiated.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseWebSearchCallInProgressEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L886"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseWebSearchCallSearchingEvent",
    "description": "Emitted when a web search call is executing.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseWebSearchCallSearchingEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L913"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseWebSearchCallCompletedEvent",
    "description": "Emitted when a web search call is completed.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseWebSearchCallCompletedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L940"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "SummaryPart",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class SummaryPart",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L965"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseReasoningSummaryPartAddedEvent",
    "description": "Emitted when a reasoning summary part is completed.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseReasoningSummaryPartAddedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L984"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseReasoningSummaryPartDoneEvent",
    "description": "Emitted when a new reasoning summary part is added.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseReasoningSummaryPartDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1019"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseReasoningSummaryTextDeltaEvent",
    "description": "Emitted when a delta is added to a reasoning summary text.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseReasoningSummaryTextDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1054"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseReasoningSummaryTextDoneEvent",
    "description": "Emitted when a reasoning summary text is completed.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseReasoningSummaryTextDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1089"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseReasoningTextDeltaEvent",
    "description": "Emitted when a delta is added to a reasoning text.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseReasoningTextDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1124"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseReasoningTextDoneEvent",
    "description": "Emitted when a reasoning text is completed.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseReasoningTextDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1159"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseImageGenerationCallInProgressEvent",
    "description": "Emitted when an image generation tool call is in progress.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseImageGenerationCallInProgressEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1194"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseImageGenerationCallGeneratingEvent",
    "description": "Emitted when an image generation tool call is actively generating an image\n(intermediate state).",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseImageGenerationCallGeneratingEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1224"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseImageGenerationCallPartialImageEvent",
    "description": "Emitted when a partial image is available during image generation streaming.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseImageGenerationCallPartialImageEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1253"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseImageGenerationCallCompletedEvent",
    "description": "Emitted when an image generation tool call has completed and the final image\nis available.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseImageGenerationCallCompletedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1292"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseMcpCallArgumentsDeltaEvent",
    "description": "Emitted when there is a delta (partial update) to the arguments of an MCP\ntool call.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseMcpCallArgumentsDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1320"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseMcpCallArgumentsDoneEvent",
    "description": "Emitted when the arguments for an MCP tool call are finalized.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseMcpCallArgumentsDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1352"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseMcpCallInProgressEvent",
    "description": "Emitted when an MCP tool call is in progress.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseMcpCallInProgressEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1383"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseMcpCallCompletedEvent",
    "description": "Emitted when an MCP tool call has completed successfully.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseMcpCallCompletedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1410"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseMcpCallFailedEvent",
    "description": "Emitted when an MCP tool call has failed.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseMcpCallFailedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1437"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseMcpListToolsInProgressEvent",
    "description": "Emitted when the system is in the process of retrieving the list of available\nMCP tools.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseMcpListToolsInProgressEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1465"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseMcpListToolsCompletedEvent",
    "description": "Emitted when the list of available MCP tools has been successfully retrieved.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseMcpListToolsCompletedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1492"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseMcpListToolsFailedEvent",
    "description": "Emitted when the attempt to list available MCP tools has failed.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseMcpListToolsFailedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1519"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseCodeInterpreterCallInProgressEvent",
    "description": "Emitted when a code interpreter call is in progress.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseCodeInterpreterCallInProgressEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1546"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseCodeInterpreterCallInterpretingEvent",
    "description": "Emitted when the code interpreter is actively interpreting the code snippet.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseCodeInterpreterCallInterpretingEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1576"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseCodeInterpreterCallCompletedEvent",
    "description": "Emitted when the code interpreter call is completed.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseCodeInterpreterCallCompletedEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1606"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseCodeInterpreterCallCodeDeltaEvent",
    "description": "Emitted when a partial code snippet is streamed by the code interpreter.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseCodeInterpreterCallCodeDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1634"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseCodeInterpreterCallCodeDoneEvent",
    "description": "Emitted when the code snippet is finalized by the code interpreter.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseCodeInterpreterCallCodeDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1666"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseCustomToolCallInputDeltaEvent",
    "description": "Event representing a delta (partial update) to the input of a custom tool call.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseCustomToolCallInputDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1697"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseCustomToolCallInputDoneEvent",
    "description": "Event indicating that input for a custom tool call is complete.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseCustomToolCallInputDoneEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1728"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseErrorEvent",
    "description": "Emitted when an error occurs.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ResponseErrorEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1759"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseStreamEvent",
    "description": "Represents the events that can be emitted during a streaming response.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare const ResponseStreamEvent: Schema.Union<[typeof ResponseCreatedEvent, typeof ResponseQueuedEvent, typeof ResponseInProgressEvent, typeof ResponseCompletedEvent, typeof ResponseIncompleteEvent, typeof ResponseFailedEvent, typeof ResponseOutputItemAddedEvent, typeof ResponseOutputItemDoneEvent, typeof ResponseContentPartAddedEvent, typeof ResponseContentPartDoneEvent, typeof ResponseOutputTextDeltaEvent, typeof ResponseOutputTextDoneEvent, typeof ResponseOutputTextAnnotationAddedEvent, typeof ResponseRefusalDeltaEvent, typeof ResponseRefusalDoneEvent, typeof ResponseFunctionCallArgumentsDeltaEvent, typeof ResponseFunctionCallArgumentsDoneEvent, typeof ResponseFileSearchCallInProgressEvent, typeof ResponseFileSearchCallSearchingEvent, typeof ResponseFileSearchCallCompletedEvent, typeof ResponseWebSearchCallInProgressEvent, typeof ResponseWebSearchCallSearchingEvent, typeof ResponseWebSearchCallCompletedEvent, typeof ResponseReasoningSummaryPartAddedEvent, typeof ResponseReasoningSummaryPartDoneEvent, typeof ResponseReasoningSummaryTextDeltaEvent, typeof ResponseReasoningSummaryTextDoneEvent, typeof ResponseReasoningTextDeltaEvent, typeof ResponseReasoningTextDoneEvent, typeof ResponseImageGenerationCallInProgressEvent, typeof ResponseImageGenerationCallGeneratingEvent, typeof ResponseImageGenerationCallPartialImageEvent, typeof ResponseImageGenerationCallCompletedEvent, typeof ResponseMcpCallArgumentsDeltaEvent, typeof ResponseMcpCallArgumentsDoneEvent, typeof ResponseMcpCallInProgressEvent, typeof ResponseMcpCallCompletedEvent, typeof ResponseMcpCallFailedEvent, typeof ResponseMcpListToolsInProgressEvent, typeof ResponseMcpListToolsCompletedEvent, typeof ResponseMcpListToolsFailedEvent, typeof ResponseCodeInterpreterCallInProgressEvent, typeof ResponseCodeInterpreterCallInterpretingEvent, typeof ResponseCodeInterpreterCallCompletedEvent, typeof ResponseCodeInterpreterCallCodeDeltaEvent, typeof ResponseCodeInterpreterCallCodeDoneEvent, typeof ResponseCustomToolCallInputDeltaEvent, typeof ResponseCustomToolCallInputDoneEvent, typeof ResponseErrorEvent]>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1790"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly apiKey?: Redacted.Redacted | undefined; readonly apiUrl?: string | undefined; readonly organizationId?: Redacted.Redacted | undefined; readonly projectId?: Redacted.Redacted | undefined; readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined; }) => Effect.Effect<Service, never, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L64"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly apiKey?: Redacted.Redacted | undefined; readonly apiUrl?: string | undefined; readonly organizationId?: Redacted.Redacted | undefined; readonly projectId?: Redacted.Redacted | undefined; readonly transformClient?: (client: HttpClient.HttpClient) => HttpClient.HttpClient; }) => Layer.Layer<OpenAiClient, never, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L226"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "layerConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layerConfig: (options: { readonly apiKey?: Config.Config<Redacted.Redacted | undefined> | undefined; readonly apiUrl?: Config.Config<string | undefined> | undefined; readonly organizationId?: Config.Config<Redacted.Redacted | undefined> | undefined; readonly projectId?: Config.Config<Redacted.Redacted | undefined> | undefined; readonly transformClient?: (client: HttpClient.HttpClient) => HttpClient.HttpClient; }) => Layer.Layer<OpenAiClient, ConfigError, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L238"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface Service {\n  readonly client: Generated.Client\n\n  readonly streamRequest: <A, I, R>(\n    request: HttpClientRequest.HttpClientRequest,\n    schema: Schema.Schema<A, I, R>\n  ) => Stream.Stream<A, AiError.AiError, R>\n\n  readonly createResponse: (\n    options: typeof Generated.CreateResponse.Encoded\n  ) => Effect.Effect<Generated.Response, AiError.AiError>\n\n  readonly createResponseStream: (\n    options: Omit<typeof Generated.CreateResponse.Encoded, \"stream\">\n  ) => Stream.Stream<ResponseStreamEvent, AiError.AiError>\n\n  readonly createEmbedding: (\n    options: typeof Generated.CreateEmbeddingRequest.Encoded\n  ) => Effect.Effect<Generated.CreateEmbeddingResponse, AiError.AiError>\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L33"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "StreamCompletionRequest",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type StreamCompletionRequest = Omit<typeof Generated.CreateChatCompletionRequest.Encoded, \"stream\">",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L58"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiClient.ts",
      "path": "src/OpenAiClient.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseStreamEvent",
    "description": "Represents the events that can be emitted during a streaming response.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type ResponseStreamEvent = typeof ResponseStreamEvent.Type",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiClient.ts#L1898"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiConfig.ts",
      "path": "src/OpenAiConfig.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class OpenAiConfig",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiConfig.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiConfig.ts",
      "path": "src/OpenAiConfig.ts"
    },
    "project": "@effect/ai-openai",
    "name": "withClientTransform",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "declare const withClientTransform: { (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiConfig.ts#L43"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiConfig.ts",
      "path": "src/OpenAiConfig.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiConfig.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.",
    "category": "Models",
    "signature": "export interface Service {\n    readonly transformClient?: (client: HttpClient) => HttpClient\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiConfig.ts#L34"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class Config",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L29"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "makeDataLoader",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const makeDataLoader: (options: { readonly model: (string & {}) | Model; readonly config: Config.DataLoader; }) => Effect.Effect<EmbeddingModel.Service, never, OpenAiClient.OpenAiClient | Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L150"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "withConfigOverride",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "declare const withConfigOverride: { (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L207"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "declare const model: (model: (string & {}) | Model, { mode, ...config }: Simplify<(({ readonly mode: \"batched\"; } & Config.Batched) | ({ readonly mode: \"data-loader\"; } & Config.DataLoader))>) => AiModel.Model<\"openai\", EmbeddingModel.EmbeddingModel, OpenAiClient.OpenAiClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L91"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "layerBatched",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layerBatched: (options: { readonly model: (string & {}) | Model; readonly config?: Config.Batched; }) => Layer.Layer<EmbeddingModel.EmbeddingModel, never, OpenAiClient.OpenAiClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L187"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "layerDataLoader",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layerDataLoader: (options: { readonly model: (string & {}) | Model; readonly config: Config.DataLoader; }) => Layer.Layer<EmbeddingModel.EmbeddingModel, never, OpenAiClient.OpenAiClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L197"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type Model = typeof Generated.CreateEmbeddingRequestModelEnum.Encoded",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L19"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.",
    "category": "Configuration",
    "signature": "export interface Service extends\n    Simplify<\n      Partial<\n        Omit<\n          typeof Generated.CreateEmbeddingRequest.Encoded,\n          \"input\"\n        >\n      >\n    >\n  {}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L50"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config.Batched",
    "deprecated": false,
    "examples": [],
    "since": "1.0.",
    "category": "Configuration",
    "signature": "export interface Batched extends Omit<Config.Service, \"model\"> {\n    readonly maxBatchSize?: number\n    readonly cache?: {\n      readonly capacity: number\n      readonly timeToLive: Duration.DurationInput\n    }\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L65"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiEmbeddingModel.ts",
      "path": "src/OpenAiEmbeddingModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config.DataLoader",
    "deprecated": false,
    "examples": [],
    "since": "1.0.",
    "category": "Configuration",
    "signature": "export interface DataLoader extends Omit<Config.Service, \"model\"> {\n    readonly window: Duration.DurationInput\n    readonly maxBatchSize?: number\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiEmbeddingModel.ts#L77"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class Config",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L44"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly model: (string & {}) | Model; readonly config?: Omit<Config.Service, \"model\">; }) => Effect.Effect<LanguageModel.Service, never, OpenAiClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L272"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "withConfigOverride",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "declare const withConfigOverride: { (overrides: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, overrides: Config.Service): Effect.Effect<A, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L355"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Ai Models",
    "signature": "declare const model: (model: (string & {}) | Model, config?: Omit<Config.Service, \"model\">) => AiModel.Model<\"openai\", LanguageModel.LanguageModel, OpenAiClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L252"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "modelWithTokenizer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Ai Models",
    "signature": "declare const modelWithTokenizer: (model: (string & {}) | Model, config?: Omit<Config.Service, \"model\">) => AiModel.Model<\"openai\", LanguageModel.LanguageModel | Tokenizer.Tokenizer, OpenAiClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L262"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly model: (string & {}) | Model; readonly config?: Omit<Config.Service, \"model\">; }) => Layer.Layer<LanguageModel.LanguageModel, never, OpenAiClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L335"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "layerWithTokenizer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layerWithTokenizer: (options: { readonly model: (string & {}) | Model; readonly config?: Omit<Config.Service, \"model\">; }) => Layer.Layer<LanguageModel.LanguageModel | Tokenizer.Tokenizer, never, OpenAiClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L345"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type Model = typeof Generated.ChatModel.Encoded | typeof Generated.ModelIdsResponsesEnum.Encoded",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L34"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "Config.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface Service extends\n    Simplify<\n      Partial<\n        Omit<\n          typeof Generated.CreateResponse.Encoded,\n          \"input\" | \"tools\" | \"tool_choice\" | \"stream\" | \"text\"\n        >\n      >\n    >\n  {\n    /**\n     * File ID prefixes used to identify file IDs in Responses API.\n     * When undefined, all file data is treated as base64 content.\n     *\n     * Examples:\n     * - OpenAI: ['file-'] for IDs like 'file-abc123'\n     * - Azure OpenAI: ['assistant-'] for IDs like 'assistant-abc123'\n     */\n    readonly fileIdPrefixes?: ReadonlyArray<string>\n    /**\n     * Configuration options for a text response from the model.\n     */\n    readonly text?: {\n      /**\n       * Constrains the verbosity of the model's response. Lower values will\n       * result in more concise responses, while higher values will result in\n       * more verbose responses.\n       *\n       * Defaults to `\"medium\"`.\n       */\n      readonly verbosity?: \"low\" | \"medium\" | \"high\"\n    }\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L65"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiLanguageModel.ts",
      "path": "src/OpenAiLanguageModel.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ProviderMetadata.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Provider Metadata",
    "signature": "export interface Service {\n    \"source\": {} | {}\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiLanguageModel.ts#L239"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "addGenAIAnnotations",
    "description": "Applies the specified OpenAi GenAI telemetry attributes to the provided\n`Span`.\n\n**NOTE**: This method will mutate the `Span` **in-place**.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const addGenAIAnnotations: ((options: OpenAiTelemetryAttributeOptions) => (span: Span) => void) & ((span: Span, options: OpenAiTelemetryAttributeOptions) => void)",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L123"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "RequestAttributes",
    "description": "Telemetry attributes which are part of the GenAI specification and are\nnamespaced by `gen_ai.openai.request`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface RequestAttributes {\n  /**\n   * The response format that is requested.\n   */\n  readonly responseFormat?: (string & {}) | WellKnownResponseFormat | null | undefined\n  /**\n   * The service tier requested. May be a specific tier, `default`, or `auto`.\n   */\n  readonly serviceTier?: (string & {}) | WellKnownServiceTier | null | undefined\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L42"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "ResponseAttributes",
    "description": "Telemetry attributes which are part of the GenAI specification and are\nnamespaced by `gen_ai.openai.response`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface ResponseAttributes {\n  /**\n   * The service tier used for the response.\n   */\n  readonly serviceTier?: string | null | undefined\n  /**\n   * A fingerprint to track any eventual change in the Generative AI\n   * environment.\n   */\n  readonly systemFingerprint?: string | null | undefined\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L60"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiTelemetryAttributes",
    "description": "The attributes used to describe telemetry in the context of Generative\nArtificial Intelligence (GenAI) Models requests and responses.\n\n{@see https://opentelemetry.io/docs/specs/semconv/attributes-registry/gen-ai/}",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type OpenAiTelemetryAttributes = Simplify<\n  & Telemetry.GenAITelemetryAttributes\n  & Telemetry.AttributesWithPrefix<RequestAttributes, \"gen_ai.openai.request\">\n  & Telemetry.AttributesWithPrefix<ResponseAttributes, \"gen_ai.openai.request\">\n>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L20"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "AllAttributes",
    "description": "All telemetry attributes which are part of the GenAI specification,\nincluding the OpenAi-specific attributes.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type AllAttributes = Telemetry.AllAttributes & RequestAttributes & ResponseAttributes",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L33"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "WellKnownResponseFormat",
    "description": "The `gen_ai.openai.request.response_format` attribute has the following\nlist of well-known values.\n\nIf one of them applies, then the respective value **MUST** be used;\notherwise, a custom value **MAY** be used.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type WellKnownResponseFormat = \"json_object\" | \"json_schema\" | \"text\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L82"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "WellKnownServiceTier",
    "description": "The `gen_ai.openai.request.service_tier` attribute has the following\nlist of well-known values.\n\nIf one of them applies, then the respective value **MUST** be used;\notherwise, a custom value **MAY** be used.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type WellKnownServiceTier = \"auto\" | \"default\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L94"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OpenAiTelemetry.ts",
      "path": "src/OpenAiTelemetry.ts"
    },
    "project": "@effect/ai-openai",
    "name": "OpenAiTelemetryAttributeOptions",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "type OpenAiTelemetryAttributeOptions = Telemetry.GenAITelemetryAttributeOptions & {\n  openai?: {\n    request?: RequestAttributes | undefined\n    response?: ResponseAttributes | undefined\n  } | undefined\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTelemetry.ts#L100"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiTokenizer.ts",
      "path": "src/OpenAiTokenizer.ts"
    },
    "project": "@effect/ai-openai",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly model: string; }) => Tokenizer.Service",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTokenizer.ts#L15"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OpenAiTokenizer.ts",
      "path": "src/OpenAiTokenizer.ts"
    },
    "project": "@effect/ai-openai",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly model: string; }) => Layer.Layer<Tokenizer.Tokenizer>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTokenizer.ts#L66"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiTool.ts",
      "path": "src/OpenAiTool.ts"
    },
    "project": "@effect/ai-openai",
    "name": "CodeInterpreter",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const CodeInterpreter: (args: { readonly container: string | { readonly type: \"auto\"; readonly file_ids?: ReadonlyArray<string> | undefined; }; }) => Tool.ProviderDefined<\"OpenAiCodeInterpreter\", { readonly args: Schema.Struct<{ container: Schema.Union<[typeof Schema.String, Schema.Struct<{ type: Schema.Literal<[\"auto\"]>; file_ids: Schema.optional<Schema.Array$<typeof Schema.String>>; }>]>; }>; readonly parameters: Schema.Struct<{ code: Schema.NullOr<typeof Schema.String>; container_id: typeof Schema.String; }>; readonly success: Schema.NullOr<Schema.Array$<Schema.Union<[typeof Generated.CodeInterpreterOutputLogs, typeof Generated.CodeInterpreterOutputImage]>>>; readonly failure: typeof Schema.Never; }, false>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTool.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiTool.ts",
      "path": "src/OpenAiTool.ts"
    },
    "project": "@effect/ai-openai",
    "name": "FileSearch",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const FileSearch: (args: { readonly vector_store_ids: ReadonlyArray<string>; readonly max_num_results?: number | null | undefined; readonly ranking_options?: { readonly ranker?: \"auto\" | \"default-2024-11-15\" | null | undefined; readonly score_threshold?: number | null | undefined; } | null | undefined; readonly filters?: { readonly key: string; readonly value: string | number | boolean; readonly type: \"eq\" | \"ne\" | \"gt\" | \"gte\" | \"lt\" | \"lte\"; } | { readonly type: \"and\" | \"or\"; readonly filters: ReadonlyArray<{ readonly key: string; readonly value: string | number | boolean; readonly type: \"eq\" | \"ne\" | \"gt\" | \"gte\" | \"lt\" | \"lte\"; }>; } | null | undefined; }) => Tool.ProviderDefined<\"OpenAiFileSearch\", { readonly args: Schema.Struct<{ readonly vector_store_ids: Schema.Array$<typeof Schema.String>; readonly max_num_results: Schema.optionalWith<typeof Schema.Int, { nullable: true; }>; readonly ranking_options: Schema.optionalWith<typeof Generated.RankingOptions, { nullable: true; }>; readonly filters: Schema.optionalWith<typeof Generated.Filters, { nullable: true; }>; }>; readonly parameters: Schema.Struct<{}>; readonly success: Schema.SchemaClass<{ readonly status: \"in_progress\" | \"searching\" | \"completed\" | \"incomplete\" | \"failed\"; readonly queries: ReadonlyArray<string>; readonly results?: ReadonlyArray<{ readonly file_id?: string | undefined; readonly text?: string | undefined; readonly filename?: string | undefined; readonly attributes?: { readonly [x: string]: unknown; } | undefined; readonly score?: number | undefined; }> | undefined; }, { readonly status: \"in_progress\" | \"searching\" | \"completed\" | \"incomplete\" | \"failed\"; readonly queries: ReadonlyArray<string>; readonly results?: ReadonlyArray<{ readonly file_id?: string | null | undefined; readonly text?: string | null | undefined; readonly filename?: string | null | undefined; readonly attributes?: { readonly [x: string]: unknown; } | null | undefined; readonly score?: number | null | undefined; }> | null | undefined; }, never>; readonly failure: typeof Schema.Never; }, false>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTool.ts#L50"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiTool.ts",
      "path": "src/OpenAiTool.ts"
    },
    "project": "@effect/ai-openai",
    "name": "WebSearch",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const WebSearch: (args: { readonly filters?: { readonly allowed_domains?: ReadonlyArray<string> | null | undefined; } | null | undefined; readonly user_location?: { readonly type?: \"approximate\" | null | undefined; readonly country?: string | null | undefined; readonly region?: string | null | undefined; readonly city?: string | null | undefined; readonly timezone?: string | null | undefined; } | null | undefined; readonly search_context_size?: \"low\" | \"medium\" | \"high\" | null | undefined; }) => Tool.ProviderDefined<\"OpenAiWebSearch\", { readonly args: Schema.Struct<{ readonly filters: Schema.optionalWith<Schema.Struct<{ allowed_domains: Schema.optionalWith<Schema.Array$<typeof Schema.String>, { nullable: true; default: () => readonly []; }>; }>, { nullable: true; }>; readonly user_location: Schema.optionalWith<typeof Generated.WebSearchApproximateLocation, { nullable: true; }>; readonly search_context_size: Schema.optionalWith<typeof Generated.WebSearchToolSearchContextSize, { nullable: true; default: () => \"medium\"; }>; }>; readonly parameters: Schema.Struct<{ action: Schema.Union<[typeof Generated.WebSearchActionSearch, typeof Generated.WebSearchActionOpenPage, typeof Generated.WebSearchActionFind]>; }>; readonly success: Schema.Struct<{ status: typeof Generated.WebSearchToolCallStatus; }>; readonly failure: typeof Schema.Never; }, false>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTool.ts#L62"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OpenAiTool.ts",
      "path": "src/OpenAiTool.ts"
    },
    "project": "@effect/ai-openai",
    "name": "WebSearchPreview",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const WebSearchPreview: (args: { readonly user_location?: { readonly type: \"approximate\"; readonly country?: string | null | undefined; readonly region?: string | null | undefined; readonly city?: string | null | undefined; readonly timezone?: string | null | undefined; } | null | undefined; readonly search_context_size?: \"low\" | \"medium\" | \"high\" | null | undefined; }) => Tool.ProviderDefined<\"OpenAiWebSearchPreview\", { readonly args: Schema.Struct<{ readonly user_location: Schema.optionalWith<typeof Generated.ApproximateLocation, { nullable: true; }>; readonly search_context_size: Schema.optionalWith<typeof Generated.WebSearchPreviewToolSearchContextSize, { nullable: true; }>; }>; readonly parameters: Schema.Struct<{ action: Schema.Union<[typeof Generated.WebSearchActionSearch, typeof Generated.WebSearchActionOpenPage, typeof Generated.WebSearchActionFind]>; }>; readonly success: Schema.Struct<{ status: typeof Generated.WebSearchToolCallStatus; }>; readonly failure: typeof Schema.Never; }, false>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/openai/src/OpenAiTool.ts#L83"
  }
]