[
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeClusterRunnerSocket.ts",
      "path": "src/NodeClusterRunnerSocket.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layerSocketServer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layerSocketServer: Layer.Layer<SocketServer.SocketServer, SocketServer.SocketServerError, ShardingConfig.ShardingConfig>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeClusterRunnerSocket.ts#L27"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeClusterRunnerSocket.ts",
      "path": "src/NodeClusterRunnerSocket.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: <const ClientOnly extends boolean = false, const Storage extends \"noop\" | \"sql\" = never>(options?: { readonly serialization?: \"msgpack\" | \"ndjson\" | undefined; readonly clientOnly?: ClientOnly | undefined; readonly storage?: Storage | undefined; readonly shardingConfig?: Partial<ShardingConfig.ShardingConfig[\"Type\"]> | undefined; }) => ClientOnly extends true ? Layer.Layer<Sharding | Runners.Runners | MessageStorage.MessageStorage, ConfigError, \"sql\" extends Storage ? SqlClient : never> : Layer.Layer<Sharding | Runners.Runners | MessageStorage.MessageStorage, SocketServer.SocketServerError | ConfigError | (\"sql\" extends Storage ? SqlError : never), \"sql\" extends Storage ? SqlClient : never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeClusterRunnerSocket.ts#L46"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeClusterShardManagerSocket.ts",
      "path": "src/NodeClusterShardManagerSocket.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layerSocketServer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layerSocketServer: Layer.Layer<SocketServer.SocketServer, SocketServer.SocketServerError, ShardingConfig.ShardingConfig>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeClusterShardManagerSocket.ts#L24"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeClusterShardManagerSocket.ts",
      "path": "src/NodeClusterShardManagerSocket.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: <const Storage extends \"sql\" | \"noop\" = never>(options?: { readonly serialization?: \"msgpack\" | \"ndjson\" | undefined; readonly shardingConfig?: Partial<ShardingConfig.ShardingConfig[\"Type\"]> | undefined; readonly storage?: Storage | undefined; readonly config?: Partial<ShardManager.Config[\"Type\"]> | undefined; }) => Layer.Layer<ShardManager.ShardManager, SocketServer.SocketServerError | ConfigError | (\"sql\" extends Storage ? SqlError : never), \"sql\" extends Storage ? SqlClient : never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeClusterShardManagerSocket.ts#L37"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeClusterSocketCommon.ts",
      "path": "src/NodeClusterSocketCommon.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layerClientProtocol",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layerClientProtocol: Layer.Layer<Runners.RpcClientProtocol, never, RpcSerialization.RpcSerialization>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeClusterSocketCommon.ts#L16"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeCommandExecutor.ts",
      "path": "src/NodeCommandExecutor.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layer: Layer<CommandExecutor, never, FileSystem>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeCommandExecutor.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeFileSystem.ts",
      "path": "src/NodeFileSystem.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layer: Layer<FileSystem, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeFileSystem.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "ParcelWatcher.ts",
      "path": "src/NodeFileSystem/ParcelWatcher.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layer",
    "description": "You can provide this Layer to use `@parcel/watcher` as the backend for watching files.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layer: Layer<WatchBackend, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/ParcelWatcher.ts#L15"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeKeyValueStore.ts",
      "path": "src/NodeKeyValueStore.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layerFileSystem",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerFileSystem: (directory: string) => Layer.Layer<KeyValueStore.KeyValueStore, PlatformError.PlatformError>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeKeyValueStore.ts#L14"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeMultipart.ts",
      "path": "src/NodeMultipart.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "stream",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const stream: (source: Readable, headers: IncomingHttpHeaders) => Stream.Stream<Multipart.Part, Multipart.MultipartError>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeMultipart.ts#L18"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeMultipart.ts",
      "path": "src/NodeMultipart.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "persisted",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const persisted: (source: Readable, headers: IncomingHttpHeaders) => Effect.Effect<Multipart.Persisted, Multipart.MultipartError, FileSystem.FileSystem | Path.Path | Scope.Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeMultipart.ts#L27"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeMultipart.ts",
      "path": "src/NodeMultipart.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "fileToReadable",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "conversions",
    "signature": "declare const fileToReadable: (file: Multipart.File) => Readable",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeMultipart.ts#L40"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodePath.ts",
      "path": "src/NodePath.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layer: Layer<Path, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodePath.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodePath.ts",
      "path": "src/NodePath.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layerPosix",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layerPosix: Layer<Path, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodePath.ts#L19"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodePath.ts",
      "path": "src/NodePath.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layerWin32",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layerWin32: Layer<Path, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodePath.ts#L25"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeRuntime.ts",
      "path": "src/NodeRuntime.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "runMain",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "runtime",
    "signature": "declare const runMain: RunMain",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeRuntime.ts#L11"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeSink.ts",
      "path": "src/NodeSink.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "fromWritable",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructor",
    "signature": "declare const fromWritable: <E, A = string | Uint8Array<ArrayBufferLike>>(evaluate: LazyArg<Writable | NodeJS.WritableStream>, onError: (error: unknown) => E, options?: FromWritableOptions) => Sink.Sink<void, A, never, E>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSink.ts#L18"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeSink.ts",
      "path": "src/NodeSink.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "fromWritableChannel",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructor",
    "signature": "declare const fromWritableChannel: <IE, OE, A>(writable: LazyArg<Writable | NodeJS.WritableStream>, onError: (error: unknown) => OE, options?: FromWritableOptions) => Channel<Chunk<never>, Chunk<A>, IE | OE, IE, void, unknown>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSink.ts#L28"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeSink.ts",
      "path": "src/NodeSink.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "stdout",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "stdio",
    "signature": "declare const stdout: Sink.Sink<void, string | Uint8Array<ArrayBufferLike>, never, PlatformError, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSink.ts#L38"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeSink.ts",
      "path": "src/NodeSink.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "stderr",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "stdio",
    "signature": "declare const stderr: Sink.Sink<void, string | Uint8Array<ArrayBufferLike>, never, PlatformError, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSink.ts#L53"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeSink.ts",
      "path": "src/NodeSink.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "stdin",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "stdio",
    "signature": "declare const stdin: Sink.Sink<void, string | Uint8Array<ArrayBufferLike>, never, PlatformError, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSink.ts#L68"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeSocket.ts",
      "path": "src/NodeSocket.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "NetSocket",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare const NetSocket: Context.Tag<NetSocket, Net.Socket>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocket.ts#L28"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeSocket.ts",
      "path": "src/NodeSocket.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "makeNet",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const makeNet: (options: Net.NetConnectOpts) => Effect.Effect<Socket.Socket, Socket.SocketError>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocket.ts#L36"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeSocket.ts",
      "path": "src/NodeSocket.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "fromDuplex",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const fromDuplex: <RO>(open: Effect.Effect<Duplex, Socket.SocketError, RO>) => Effect.Effect<Socket.Socket, never, Exclude<RO, Scope.Scope>>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocket.ts#L74"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeSocket.ts",
      "path": "src/NodeSocket.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "makeNetChannel",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const makeNetChannel: <IE = never>(options: Net.NetConnectOpts) => Channel.Channel<Chunk.Chunk<Uint8Array>, Chunk.Chunk<Uint8Array | string | Socket.CloseEvent>, Socket.SocketError | IE, IE, void, unknown>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocket.ts#L182"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeSocket.ts",
      "path": "src/NodeSocket.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layerNet",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerNet: (options: Net.NetConnectOpts) => Layer.Layer<Socket.Socket, Socket.SocketError>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocket.ts#L200"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "NodeSocket.ts",
      "path": "src/NodeSocket.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "NetSocket",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "export interface NetSocket {\n  readonly _: unique symbol\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocket.ts#L20"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "NodeSocketServer.ts",
      "path": "src/NodeSocketServer.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "IncomingMessage",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare class IncomingMessage",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocketServer.ts#L24"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeSocketServer.ts",
      "path": "src/NodeSocketServer.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const make: (options: Net.ServerOpts & Net.ListenOptions) => Effect.Effect<{ readonly address: SocketServer.Address; readonly run: <R, E, _>(handler: (socket: Socket.Socket) => Effect.Effect<_, E, R>) => Effect.Effect<never, SocketServer.SocketServerError, R>; }, SocketServer.SocketServerError, Scope.Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocketServer.ts#L33"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeSocketServer.ts",
      "path": "src/NodeSocketServer.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "makeWebSocket",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const makeWebSocket: (options: WS.ServerOptions<typeof WS.WebSocket, typeof Http.IncomingMessage>) => Effect.Effect<SocketServer.SocketServer[\"Type\"], SocketServer.SocketServerError, Scope.Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocketServer.ts#L125"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeSocketServer.ts",
      "path": "src/NodeSocketServer.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layer: (options: Net.ServerOpts & Net.ListenOptions) => Layer.Layer<SocketServer.SocketServer, SocketServer.SocketServerError>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocketServer.ts#L113"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeSocketServer.ts",
      "path": "src/NodeSocketServer.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layerWebSocket",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerWebSocket: (options: WS.ServerOptions) => Layer.Layer<SocketServer.SocketServer, SocketServer.SocketServerError>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeSocketServer.ts#L210"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "fromReadable",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const fromReadable: <E, A = Uint8Array<ArrayBufferLike>>(evaluate: LazyArg<Readable | NodeJS.ReadableStream>, onError: (error: unknown) => E, options?: FromReadableOptions) => Stream.Stream<A, E>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L38"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "fromReadableChannel",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const fromReadableChannel: <E, A = Uint8Array<ArrayBufferLike>>(evaluate: LazyArg<Readable | NodeJS.ReadableStream>, onError: (error: unknown) => E, options?: FromReadableOptions | undefined) => Channel<Chunk<A>, unknown, E>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L48"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "fromDuplex",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const fromDuplex: <IE, E, I = Uint8Array<ArrayBufferLike>, O = Uint8Array<ArrayBufferLike>>(evaluate: LazyArg<Duplex>, onError: (error: unknown) => E, options?: FromReadableOptions & FromWritableOptions) => Channel<Chunk<O>, Chunk<I>, IE | E, IE, void, unknown>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L58"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "pipeThroughDuplex",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "combinators",
    "signature": "declare const pipeThroughDuplex: { <E2, B = Uint8Array<ArrayBufferLike>>(duplex: LazyArg<Duplex>, onError: (error: unknown) => E2, options?: (FromReadableOptions & FromWritableOptions) | undefined): <R, E, A>(self: Stream.Stream<A, E, R>) => Stream.Stream<B, E2 | E, R>; <R, E, A, E2, B = Uint8Array<ArrayBufferLike>>(self: Stream.Stream<A, E, R>, duplex: LazyArg<Duplex>, onError: (error: unknown) => E2, options?: (FromReadableOptions & FromWritableOptions) | undefined): Stream.Stream<B, E | E2, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L68"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "pipeThroughSimple",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "combinators",
    "signature": "declare const pipeThroughSimple: { (duplex: LazyArg<Duplex>): <R, E>(self: Stream.Stream<string | Uint8Array, E, R>) => Stream.Stream<Uint8Array, E | PlatformError, R>; <R, E>(self: Stream.Stream<string | Uint8Array, E, R>, duplex: LazyArg<Duplex>): Stream.Stream<Uint8Array, PlatformError | E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L86"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "toReadable",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "conversions",
    "signature": "declare const toReadable: <E, R>(stream: Stream.Stream<string | Uint8Array, E, R>) => Effect<Readable, never, R>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L100"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "toReadableNever",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "conversions",
    "signature": "declare const toReadableNever: <E>(stream: Stream.Stream<string | Uint8Array, E, never>) => Readable",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L107"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "toString",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "conversions",
    "signature": "declare const toString: <E>(readable: LazyArg<Readable | NodeJS.ReadableStream>, options: { readonly onFailure: (error: unknown) => E; readonly encoding?: BufferEncoding | undefined; readonly maxBytes?: SizeInput | undefined; }) => Effect<string, E>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L114"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "toUint8Array",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "conversions",
    "signature": "declare const toUint8Array: <E>(readable: LazyArg<Readable | NodeJS.ReadableStream>, options: { readonly onFailure: (error: unknown) => E; readonly maxBytes?: SizeInput | undefined; }) => Effect<Uint8Array, E>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L127"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "stdin",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "stdio",
    "signature": "declare const stdin: Stream.Stream<Uint8Array<ArrayBufferLike>, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L136"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "stdout",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "stdio",
    "signature": "declare const stdout: Stream.Stream<Uint8Array<ArrayBufferLike>, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L144"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "stderr",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "stdio",
    "signature": "declare const stderr: Stream.Stream<Uint8Array<ArrayBufferLike>, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L152"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "FromReadableOptions",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface FromReadableOptions {\n  /** Defaults to undefined, which lets Node.js decide the chunk size */\n  readonly chunkSize?: SizeInput\n  /** Default to true, which means the stream will be closed when done */\n  readonly closeOnDone?: boolean | undefined\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L18"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "NodeStream.ts",
      "path": "src/NodeStream.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "FromWritableOptions",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "model",
    "signature": "export interface FromWritableOptions {\n  readonly endOnDone?: boolean\n  readonly encoding?: BufferEncoding\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeStream.ts#L29"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeTerminal.ts",
      "path": "src/NodeTerminal.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const make: (shouldQuit?: (input: UserInput) => boolean) => Effect<Terminal, never, Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeTerminal.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeTerminal.ts",
      "path": "src/NodeTerminal.ts"
    },
    "project": "@effect/platform-node-shared",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layer: Layer<Terminal, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/platform-node-shared/src/NodeTerminal.ts#L20"
  }
]