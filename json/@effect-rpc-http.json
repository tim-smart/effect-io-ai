[
  {
    "_tag": "Function",
    "module": {
      "name": "HttpRpcResolver.ts",
      "path": "src/HttpRpcResolver.ts"
    },
    "project": "@effect/rpc-http",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const make: <R extends Router.RpcRouter<any, any>>(client: Client.HttpClient) => RequestResolver.RequestResolver<Rpc.Request<Router.RpcRouter.Request<R>>, Schema.SerializableWithResult.Context<Router.RpcRouter.Request<R>>>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/rpc-http/src/HttpRpcResolver.ts#L21"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "HttpRpcResolver.ts",
      "path": "src/HttpRpcResolver.ts"
    },
    "project": "@effect/rpc-http",
    "name": "makeClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const makeClient: <R extends Router.RpcRouter<any, any>>(baseUrl: string) => Schema.SerializableWithResult.Context<Router.RpcRouter.Request<R>> extends never ? Effect.Effect<Resolver.Client<RequestResolver.RequestResolver<Rpc.Request<Router.RpcRouter.Request<R>>>>, never, Client.HttpClient> : \"request context is not `never`\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/rpc-http/src/HttpRpcResolver.ts#L47"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "HttpRpcResolverNoStream.ts",
      "path": "src/HttpRpcResolverNoStream.ts"
    },
    "project": "@effect/rpc-http",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const make: <R extends Router.RpcRouter<any, any>>(client: Client.HttpClient) => RequestResolver.RequestResolver<Rpc.Request<Router.RpcRouter.Request<R>>, Schema.SerializableWithResult.Context<Router.RpcRouter.Request<R>>>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/rpc-http/src/HttpRpcResolverNoStream.ts#L20"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "HttpRpcResolverNoStream.ts",
      "path": "src/HttpRpcResolverNoStream.ts"
    },
    "project": "@effect/rpc-http",
    "name": "makeClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const makeClient: <R extends Router.RpcRouter<any, any>>(baseUrl: string) => Schema.SerializableWithResult.Context<Router.RpcRouter.Request<R>> extends never ? Effect.Effect<Resolver.Client<RequestResolver.RequestResolver<Rpc.Request<Router.RpcRouter.Request<R>>>>, never, Client.HttpClient> : \"request context is not `never`\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/rpc-http/src/HttpRpcResolverNoStream.ts#L39"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "HttpRpcRouter.ts",
      "path": "src/HttpRpcRouter.ts"
    },
    "project": "@effect/rpc-http",
    "name": "toHttpApp",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "conversions",
    "signature": "declare const toHttpApp: { (options?: { readonly spanPrefix?: string; }): <R extends Router.RpcRouter<any, any>>(self: R) => App.Default<ServerError.RequestError, Router.RpcRouter.Context<R>>; <R extends Router.RpcRouter<any, any>>(self: R, options?: { readonly spanPrefix?: string; }): App.Default<ServerError.RequestError, Router.RpcRouter.Context<R>>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/rpc-http/src/HttpRpcRouter.ts#L20"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "HttpRpcRouterNoStream.ts",
      "path": "src/HttpRpcRouterNoStream.ts"
    },
    "project": "@effect/rpc-http",
    "name": "toHttpApp",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "conversions",
    "signature": "declare const toHttpApp: { (options?: { readonly spanPrefix?: string; }): <R extends Router.RpcRouter<any, any>>(self: R) => App.Default<ServerError.RequestError, Router.RpcRouter.Context<R>>; <R extends Router.RpcRouter<any, any>>(self: R, options?: { readonly spanPrefix?: string; }): App.Default<ServerError.RequestError, Router.RpcRouter.Context<R>>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/rpc-http/src/HttpRpcRouterNoStream.ts#L17"
  }
]