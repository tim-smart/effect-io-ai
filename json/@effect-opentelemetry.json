[
  {
    "_tag": "Class",
    "module": {
      "name": "Logger.ts",
      "path": "src/Logger.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "OtelLoggerProvider",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare class OtelLoggerProvider",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Logger.ts#L20"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Logger.ts",
      "path": "src/Logger.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const make: Effect.Effect<Logger.Logger<unknown, void>, never, OtelLoggerProvider>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Logger.ts#L29"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Logger.ts",
      "path": "src/Logger.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerLoggerAdd",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerLoggerAdd: Layer.Layer<never, never, OtelLoggerProvider>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Logger.ts#L67"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Logger.ts",
      "path": "src/Logger.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerLoggerReplace",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerLoggerReplace: Layer.Layer<never, never, OtelLoggerProvider>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Logger.ts#L77"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "Logger.ts",
      "path": "src/Logger.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerLoggerProvider",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerLoggerProvider: (processor: Otel.LogRecordProcessor | NonEmptyReadonlyArray<Otel.LogRecordProcessor>, config?: Omit<Otel.LoggerProviderConfig, \"resource\"> & { readonly shutdownTimeout?: DurationInput | undefined; }) => Layer.Layer<OtelLoggerProvider, never, Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Logger.ts#L87"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Metrics.ts",
      "path": "src/Metrics.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "makeProducer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "producer",
    "signature": "declare const makeProducer: Effect.Effect<MetricProducer, never, Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Metrics.ts#L18"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Metrics.ts",
      "path": "src/Metrics.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "registerProducer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "producer",
    "signature": "declare const registerProducer: (self: MetricProducer, metricReader: LazyArg<MetricReader | NonEmptyReadonlyArray<MetricReader>>) => Effect.Effect<Array<any>, never, Scope.Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Metrics.ts#L24"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Metrics.ts",
      "path": "src/Metrics.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layer: (evaluate: LazyArg<MetricReader | NonEmptyReadonlyArray<MetricReader>>, options?: { readonly shutdownTimeout?: DurationInput | undefined; }) => Layer<never, never, Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Metrics.ts#L33"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "NodeSdk.ts",
      "path": "src/NodeSdk.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerEmpty",
    "deprecated": false,
    "examples": [],
    "since": "2.0.0",
    "category": "layer",
    "signature": "declare const layerEmpty: Layer.Layer<Resource.Resource, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/NodeSdk.ts#L125"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeSdk.ts",
      "path": "src/NodeSdk.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerTracerProvider",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerTracerProvider: (processor: SpanProcessor | NonEmptyReadonlyArray<SpanProcessor>, config?: Omit<TracerConfig, \"resource\"> & { readonly shutdownTimeout?: DurationInput | undefined; }) => Layer.Layer<Tracer.OtelTracerProvider, never, Resource.Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/NodeSdk.ts#L42"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "NodeSdk.ts",
      "path": "src/NodeSdk.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layer: { (evaluate: LazyArg<Configuration>): Layer.Layer<Resource.Resource>; <R, E>(evaluate: Effect.Effect<Configuration, E, R>): Layer.Layer<Resource.Resource, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/NodeSdk.ts#L76"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "NodeSdk.ts",
      "path": "src/NodeSdk.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "Configuration",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "model",
    "signature": "export interface Configuration {\n  readonly spanProcessor?: SpanProcessor | ReadonlyArray<SpanProcessor> | undefined\n  readonly tracerConfig?: Omit<TracerConfig, \"resource\"> | undefined\n  readonly metricReader?: MetricReader | ReadonlyArray<MetricReader> | undefined\n  readonly logRecordProcessor?: LogRecordProcessor | ReadonlyArray<LogRecordProcessor> | undefined\n  readonly loggerProviderConfig?: Omit<LoggerProviderConfig, \"resource\"> | undefined\n  readonly resource?: {\n    readonly serviceName: string\n    readonly serviceVersion?: string\n    readonly attributes?: OtelApi.Attributes\n  } | undefined\n  readonly shutdownTimeout?: DurationInput | undefined\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/NodeSdk.ts#L24"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "Otlp.ts",
      "path": "src/Otlp.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly baseUrl: string; readonly resource: { readonly serviceName: string; readonly serviceVersion?: string | undefined; readonly attributes?: Record<string, unknown>; }; readonly headers?: Headers.Input | undefined; readonly maxBatchSize?: number | undefined; readonly replaceLogger?: Logger.Logger<any, any> | undefined; readonly tracerContext?: (<X>(f: () => X, span: Tracer.AnySpan) => X) | undefined; readonly loggerExportInterval?: Duration.DurationInput | undefined; readonly metricsExportInterval?: Duration.DurationInput | undefined; readonly tracerExportInterval?: Duration.DurationInput | undefined; readonly shutdownTimeout?: Duration.DurationInput | undefined; }) => Layer.Layer<never, never, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Otlp.ts#L18"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OtlpLogger.ts",
      "path": "src/OtlpLogger.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly url: string; readonly resource: { readonly serviceName: string; readonly serviceVersion?: string | undefined; readonly attributes?: Record<string, unknown>; }; readonly headers?: Headers.Input | undefined; readonly exportInterval?: Duration.DurationInput | undefined; readonly maxBatchSize?: number | undefined; readonly shutdownTimeout?: Duration.DurationInput | undefined; }) => Effect.Effect<Logger.Logger<unknown, void>, never, HttpClient.HttpClient | Scope.Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpLogger.ts#L25"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OtlpLogger.ts",
      "path": "src/OtlpLogger.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly url: string; readonly resource: { readonly serviceName: string; readonly serviceVersion?: string | undefined; readonly attributes?: Record<string, unknown>; }; readonly replaceLogger?: Logger.Logger<any, any> | undefined; readonly headers?: Headers.Input | undefined; readonly exportInterval?: Duration.DurationInput | undefined; readonly maxBatchSize?: number | undefined; readonly shutdownTimeout?: Duration.DurationInput | undefined; }) => Layer.Layer<never, never, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpLogger.ts#L75"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OtlpMetrics.ts",
      "path": "src/OtlpMetrics.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly url: string; readonly resource: { readonly serviceName: string; readonly serviceVersion?: string | undefined; readonly attributes?: Record<string, unknown>; }; readonly headers?: Headers.Input | undefined; readonly exportInterval?: Duration.DurationInput | undefined; readonly shutdownTimeout?: Duration.DurationInput | undefined; }) => Effect.Effect<void, never, HttpClient.HttpClient | Scope.Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpMetrics.ts#L23"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OtlpMetrics.ts",
      "path": "src/OtlpMetrics.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly url: string; readonly resource: { readonly serviceName: string; readonly serviceVersion?: string | undefined; readonly attributes?: Record<string, unknown>; }; readonly headers?: Headers.Input | undefined; readonly exportInterval?: Duration.DurationInput | undefined; readonly shutdownTimeout?: Duration.DurationInput | undefined; }) => Layer.Layer<never, never, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpMetrics.ts#L283"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OtlpResource.ts",
      "path": "src/OtlpResource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly serviceName: string; readonly serviceVersion?: string | undefined; readonly attributes?: Record<string, unknown> | undefined; }) => Resource",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpResource.ts#L21"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OtlpResource.ts",
      "path": "src/OtlpResource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "entriesToAttributes",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Attributes",
    "signature": "declare const entriesToAttributes: (entries: Iterable<[string, unknown]>) => Array<KeyValue>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpResource.ts#L54"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OtlpResource.ts",
      "path": "src/OtlpResource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "unknownToAttributeValue",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Attributes",
    "signature": "declare const unknownToAttributeValue: (value: unknown) => AnyValue",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpResource.ts#L69"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OtlpResource.ts",
      "path": "src/OtlpResource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "Resource",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface Resource {\n  /** Resource attributes */\n  attributes: Array<KeyValue>\n  /** Resource droppedAttributesCount */\n  droppedAttributesCount: number\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpResource.ts#L10"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OtlpResource.ts",
      "path": "src/OtlpResource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "KeyValue",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface KeyValue {\n  /** KeyValue key */\n  key: string\n  /** KeyValue value */\n  value: AnyValue\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpResource.ts#L109"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OtlpResource.ts",
      "path": "src/OtlpResource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "AnyValue",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface AnyValue {\n  /** AnyValue stringValue */\n  stringValue?: string | null\n  /** AnyValue boolValue */\n  boolValue?: boolean | null\n  /** AnyValue intValue */\n  intValue?: number | null\n  /** AnyValue doubleValue */\n  doubleValue?: number | null\n  /** AnyValue arrayValue */\n  arrayValue?: ArrayValue\n  /** AnyValue kvlistValue */\n  kvlistValue?: KeyValueList\n  /** AnyValue bytesValue */\n  bytesValue?: Uint8Array\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpResource.ts#L120"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OtlpResource.ts",
      "path": "src/OtlpResource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "ArrayValue",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface ArrayValue {\n  /** ArrayValue values */\n  values: Array<AnyValue>\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpResource.ts#L141"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OtlpResource.ts",
      "path": "src/OtlpResource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "KeyValueList",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface KeyValueList {\n  /** KeyValueList values */\n  values: Array<KeyValue>\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpResource.ts#L150"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OtlpResource.ts",
      "path": "src/OtlpResource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "LongBits",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface LongBits {\n  low: number\n  high: number\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpResource.ts#L159"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "OtlpResource.ts",
      "path": "src/OtlpResource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "Fixed64",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type Fixed64 = LongBits | string | number",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpResource.ts#L168"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "OtlpTracer.ts",
      "path": "src/OtlpTracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly url: string; readonly resource: { readonly serviceName: string; readonly serviceVersion?: string | undefined; readonly attributes?: Record<string, unknown>; }; readonly headers?: Headers.Input | undefined; readonly exportInterval?: Duration.DurationInput | undefined; readonly maxBatchSize?: number | undefined; readonly context?: (<X>(f: () => X, span: Tracer.AnySpan) => X) | undefined; readonly shutdownTimeout?: Duration.DurationInput | undefined; }) => Effect.Effect<Tracer.Tracer, never, HttpClient.HttpClient | Scope.Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpTracer.ts#L25"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "OtlpTracer.ts",
      "path": "src/OtlpTracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly url: string; readonly resource: { readonly serviceName: string; readonly serviceVersion?: string | undefined; readonly attributes?: Record<string, unknown>; }; readonly headers?: Headers.Input | undefined; readonly exportInterval?: Duration.DurationInput | undefined; readonly maxBatchSize?: number | undefined; readonly context?: (<X>(f: () => X, span: Tracer.AnySpan) => X) | undefined; readonly shutdownTimeout?: Duration.DurationInput | undefined; }) => Layer.Layer<never, never, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/OtlpTracer.ts#L104"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Resource.ts",
      "path": "src/Resource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "Resource",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tag",
    "signature": "declare const Resource: Tag<Resource, Resources.Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Resource.ts#L33"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Resource.ts",
      "path": "src/Resource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerEmpty",
    "deprecated": false,
    "examples": [],
    "since": "2.0.0",
    "category": "layer",
    "signature": "declare const layerEmpty: Layer.Layer<Resource, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Resource.ts#L115"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "Resource.ts",
      "path": "src/Resource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layer: (config: { readonly serviceName: string; readonly serviceVersion?: string; readonly attributes?: OtelApi.Attributes; }) => Layer.Layer<Resource, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Resource.ts#L39"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "Resource.ts",
      "path": "src/Resource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "configToAttributes",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "config",
    "signature": "declare const configToAttributes: (options: { readonly serviceName: string; readonly serviceVersion?: string; readonly attributes?: OtelApi.Attributes; }) => Record<string, string>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Resource.ts#L53"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "Resource.ts",
      "path": "src/Resource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerFromEnv",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layerFromEnv: (additionalAttributes?: OtelApi.Attributes | undefined) => Layer.Layer<Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Resource.ts#L76"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "Resource.ts",
      "path": "src/Resource.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "Resource",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "identifier",
    "signature": "export interface Resource {\n  readonly _: unique symbol\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Resource.ts#L25"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const make: Effect<EffectTracer, never, OtelTracer>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L17"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "makeExternalSpan",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const makeExternalSpan: (options: { readonly traceId: string; readonly spanId: string; readonly traceFlags?: number | undefined; readonly traceState?: string | Otel.TraceState | undefined; }) => ExternalSpan",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L23"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "currentOtelSpan",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "accessors",
    "signature": "declare const currentOtelSpan: Effect<Otel.Span, NoSuchElementException, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L36"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerWithoutOtelTracer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerWithoutOtelTracer: Layer<never, never, OtelTracer>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L42"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layer: Layer<OtelTracer, never, OtelTracerProvider | Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L48"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerGlobal",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerGlobal: Layer<OtelTracer, never, Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L54"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerTracer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerTracer: Layer<OtelTracer, never, OtelTracerProvider | Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L60"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerGlobalTracer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerGlobalTracer: Layer<OtelTracer, never, Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L66"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "OtelTracerProvider",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare const OtelTracerProvider: Tag<OtelTracerProvider, Otel.TracerProvider>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L80"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "OtelTracer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare const OtelTracer: Tag<OtelTracer, Otel.Tracer>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L94"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "OtelTraceFlags",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare const OtelTraceFlags: Tag<OtelTraceFlags, Otel.TraceFlags>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L108"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "OtelTraceState",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare const OtelTraceState: Tag<OtelTraceState, Otel.TraceState>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L122"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "withSpanContext",
    "description": "Set the effect's parent span from the given opentelemetry `SpanContext`.\n\nThis is handy when you set up OpenTelemetry outside of Effect and want to\nattach to a parent span.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "propagation",
    "signature": "declare const withSpanContext: { (spanContext: Otel.SpanContext): <A, E, R>(effect: Effect<A, E, R>) => Effect<A, E, Exclude<R, ParentSpan>>; <A, E, R>(effect: Effect<A, E, R>, spanContext: Otel.SpanContext): Effect<A, E, Exclude<R, ParentSpan>>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L133"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "OtelTracerProvider",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "export interface OtelTracerProvider {\n  readonly _: unique symbol\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L72"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "OtelTracer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "export interface OtelTracer {\n  readonly _: unique symbol\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L86"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "OtelTraceFlags",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "export interface OtelTraceFlags {\n  readonly _: unique symbol\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L100"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "Tracer.ts",
      "path": "src/Tracer.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "OtelTraceState",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "export interface OtelTraceState {\n  readonly _: unique symbol\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/Tracer.ts#L114"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "WebSdk.ts",
      "path": "src/WebSdk.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layerTracerProvider",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerTracerProvider: (processor: SpanProcessor | NonEmptyReadonlyArray<SpanProcessor>, config?: Omit<TracerConfig, \"resource\">) => Layer.Layer<Tracer.OtelTracerProvider, never, Resource.Resource>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/WebSdk.ts#L40"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "WebSdk.ts",
      "path": "src/WebSdk.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const layer: { (evaluate: LazyArg<Configuration>): Layer.Layer<Resource.Resource>; <E, R>(evaluate: Effect.Effect<Configuration, E, R>): Layer.Layer<Resource.Resource, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/WebSdk.ts#L67"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "WebSdk.ts",
      "path": "src/WebSdk.ts"
    },
    "project": "@effect/opentelemetry",
    "name": "Configuration",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "model",
    "signature": "export interface Configuration {\n  readonly spanProcessor?: SpanProcessor | ReadonlyArray<SpanProcessor> | undefined\n  readonly tracerConfig?: Omit<TracerConfig, \"resource\">\n  readonly metricReader?: MetricReader | ReadonlyArray<MetricReader> | undefined\n  readonly logRecordProcessor?: LogRecordProcessor | ReadonlyArray<LogRecordProcessor> | undefined\n  readonly loggerProviderConfig?: Omit<LoggerProviderConfig, \"resource\"> | undefined\n  readonly resource: {\n    readonly serviceName: string\n    readonly serviceVersion?: string\n    readonly attributes?: OtelApi.Attributes\n  }\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/opentelemetry/src/WebSdk.ts#L23"
  }
]