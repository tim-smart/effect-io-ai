[
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockClient.ts",
      "path": "src/AmazonBedrockClient.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AmazonBedrockClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class AmazonBedrockClient",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockClient.ts#L32"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AmazonBedrockClient.ts",
      "path": "src/AmazonBedrockClient.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly apiUrl?: string | undefined; readonly accessKeyId: string; readonly secretAccessKey: Redacted.Redacted<string>; readonly sessionToken?: Redacted.Redacted<string> | undefined; readonly region?: string | undefined; readonly transformClient?: (client: HttpClient.HttpClient) => HttpClient.HttpClient; }) => Effect.Effect<Service, never, HttpClient.HttpClient | Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockClient.ts#L63"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AmazonBedrockClient.ts",
      "path": "src/AmazonBedrockClient.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layer: (options: { readonly apiUrl?: string | undefined; readonly accessKeyId: string; readonly secretAccessKey: Redacted.Redacted<string>; readonly sessionToken?: Redacted.Redacted<string> | undefined; readonly region?: string | undefined; readonly transformClient?: (client: HttpClient.HttpClient) => HttpClient.HttpClient; }) => Layer.Layer<AmazonBedrockClient, never, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockClient.ts#L202"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AmazonBedrockClient.ts",
      "path": "src/AmazonBedrockClient.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "layerConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerConfig: (options: { readonly apiUrl?: Config.Config<string> | undefined; readonly accessKeyId: Config.Config<string>; readonly secretAccessKey: Config.Config<Redacted.Redacted>; readonly sessionToken?: Config.Config<Redacted.Redacted> | undefined; readonly region?: Config.Config<string> | undefined; readonly transformClient?: (client: HttpClient.HttpClient) => HttpClient.HttpClient; }) => Layer.Layer<AmazonBedrockClient, ConfigError, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockClient.ts#L217"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AmazonBedrockClient.ts",
      "path": "src/AmazonBedrockClient.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface Service {\n  readonly client: Client\n\n  readonly streamRequest: <A, I, R>(\n    request: HttpClientRequest.HttpClientRequest,\n    schema: Schema.Schema<A, I, R>\n  ) => Stream.Stream<A, AiError.AiError, R>\n\n  readonly converse: (options: {\n    readonly params?: { \"anthropic-beta\"?: string | undefined } | undefined\n    readonly payload: typeof ConverseRequest.Encoded\n  }) => Effect.Effect<ConverseResponse, AiError.AiError>\n\n  readonly converseStream: (options: {\n    readonly params?: { \"anthropic-beta\"?: string | undefined } | undefined\n    readonly payload: typeof ConverseRequest.Encoded\n  }) => Stream.Stream<ConverseResponseStreamEvent, AiError.AiError>\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockClient.ts#L40"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AmazonBedrockClient.ts",
      "path": "src/AmazonBedrockClient.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "Client",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface Client {\n  readonly converse: (options: {\n    readonly params?: { \"anthropic-beta\"?: string | undefined }\n    readonly payload: typeof ConverseRequest.Encoded\n  }) => Effect.Effect<typeof ConverseResponse.Type, HttpClientError.HttpClientError | ParseError>\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockClient.ts#L244"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockConfig.ts",
      "path": "src/AmazonBedrockConfig.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AmazonBedrockConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class AmazonBedrockConfig",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockConfig.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockConfig.ts",
      "path": "src/AmazonBedrockConfig.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "withClientTransform",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "declare const withClientTransform: { (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockConfig.ts#L43"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AmazonBedrockConfig.ts",
      "path": "src/AmazonBedrockConfig.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AmazonBedrockConfig.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.",
    "category": "Models",
    "signature": "export interface Service {\n    readonly transformClient?: (client: HttpClient) => HttpClient\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockConfig.ts#L34"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockLanguageModel.ts",
      "path": "src/AmazonBedrockLanguageModel.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "Config",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class Config",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockLanguageModel.ts#L61"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockLanguageModel.ts",
      "path": "src/AmazonBedrockLanguageModel.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly model: (string & {}) | Model; readonly config?: Omit<Config.Service, \"model\">; }) => Effect.Effect<LanguageModel.Service, never, AmazonBedrockClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockLanguageModel.ts#L196"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockLanguageModel.ts",
      "path": "src/AmazonBedrockLanguageModel.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "withConfigOverride",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "declare const withConfigOverride: { (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockLanguageModel.ts#L299"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AmazonBedrockLanguageModel.ts",
      "path": "src/AmazonBedrockLanguageModel.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "AiModels",
    "signature": "declare const model: (model: (string & {}) | Model, config?: Omit<Config.Service, \"model\">) => AiModel.Model<\"amazon-bedrock\", LanguageModel.LanguageModel, AmazonBedrockClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockLanguageModel.ts#L186"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AmazonBedrockLanguageModel.ts",
      "path": "src/AmazonBedrockLanguageModel.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly model: (string & {}) | Model; readonly config?: Omit<Config.Service, \"model\">; }) => Layer.Layer<LanguageModel.LanguageModel, never, AmazonBedrockClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockLanguageModel.ts#L289"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AmazonBedrockLanguageModel.ts",
      "path": "src/AmazonBedrockLanguageModel.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "Model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type Model = typeof BedrockFoundationModelId.Encoded",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockLanguageModel.ts#L51"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AmazonBedrockLanguageModel.ts",
      "path": "src/AmazonBedrockLanguageModel.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AmazonBedrockReasoningInfo",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Provider Options",
    "signature": "type AmazonBedrockReasoningInfo = {\n  readonly type: \"thinking\"\n  /**\n   * Thinking content as an encrypted string, which is used to verify\n   * that thinking content was indeed generated by Amazon Bedrock's API.\n   */\n  readonly signature: string\n} | {\n  readonly type: \"redacted_thinking\"\n  /**\n   * Thinking content which was flagged by Amazon Bedrock's safety systems, and\n   * was therefore encrypted.\n   */\n  readonly redactedData: string\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockLanguageModel.ts#L101"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AmazonBedrockLanguageModel.ts",
      "path": "src/AmazonBedrockLanguageModel.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "Config.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "export interface Service extends\n    Simplify<\n      Partial<\n        Omit<\n          typeof ConverseRequest.Encoded,\n          \"messages\" | \"system\" | \"toolConfig\"\n        >\n      >\n    >\n  {}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockLanguageModel.ts#L81"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "BedrockFoundationModelId",
    "description": "The foundation models supported by Amazon Bedrock.\n\nAn up-to-date list can be generated with the following command:\n\n```sh\naws bedrock list-foundation-models --output json | jq '[.modelSummaries[].modelId]'\n```",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class BedrockFoundationModelId",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L22"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "CachePointBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class CachePointBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L119"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "DocumentBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class DocumentBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L148"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailConverseImageBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailConverseImageBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L164"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailConverseTextBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailConverseTextBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L177"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailConverseContentBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailConverseContentBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L188"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ImageBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ImageBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L208"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "JsonBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class JsonBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L219"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ReasoningContentBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ReasoningContentBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L227"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "VideoBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class VideoBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L249"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ToolResultBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ToolResultBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L275"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ToolUseBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ToolUseBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L295"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ContentBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ContentBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L313"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "Message",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class Message",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L356"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ConverseOutput",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ConverseOutput",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L365"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ConverseMetrics",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ConverseMetrics",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L373"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailContentFilter",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailContentFilter",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L381"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailContentPolicyAssessment",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailContentPolicyAssessment",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L395"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailContextualGroundingFilter",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailContextualGroundingFilter",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L405"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailContextualGroundingPolicyAssessment",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailContextualGroundingPolicyAssessment",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L419"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailImageCoverage",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailImageCoverage",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L431"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailTextCharactersCoverage",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailTextCharactersCoverage",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L442"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailCoverage",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailCoverage",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L453"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailUsage",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailUsage",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L462"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailInvocationMetrics",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailInvocationMetrics",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L476"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailPiiEntityFilter",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailPiiEntityFilter",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L488"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailRegexFilter",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailRegexFilter",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L533"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailSensitiveInformationPolicyAssessment",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailSensitiveInformationPolicyAssessment",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L547"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailTopic",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailTopic",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L560"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailTopicPolicyAssessment",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailTopicPolicyAssessment",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L571"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailCustomWord",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailCustomWord",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L581"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailManagedWord",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailManagedWord",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L593"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailWordPolicyAssessment",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailWordPolicyAssessment",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L606"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailAssessment",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailAssessment",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L617"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailTraceAssessment",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailTraceAssessment",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L630"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "PromptRouterTrace",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class PromptRouterTrace",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L649"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ConverseTrace",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ConverseTrace",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L662"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "TokenUsage",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class TokenUsage",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L677"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "SystemContentBlock",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class SystemContentBlock",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L689"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "GuardrailConfiguration",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class GuardrailConfiguration",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L699"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "InferenceConfiguration",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class InferenceConfiguration",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L717"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "PerformanceConfiguration",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class PerformanceConfiguration",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L736"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ToolSpecification",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ToolSpecification",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L746"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "Tool",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class Tool",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L769"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ToolChoice",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ToolChoice",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L780"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ToolConfiguration",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ToolConfiguration",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L798"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ConverseRequest",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ConverseRequest",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L809"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ConverseResponse",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ConverseResponse",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L851"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ReasoningContentBlockDelta",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ReasoningContentBlockDelta",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L877"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ToolUseBlockStart",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ToolUseBlockStart",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L887"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ContentBlockStart",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ContentBlockStart",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L906"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ContentBlockStartEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ContentBlockStartEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L916"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ContentBlockStopEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ContentBlockStopEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L927"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ToolUseBlockDelta",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ToolUseBlockDelta",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L937"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ContentBlockDelta",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ContentBlockDelta",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L947"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ContentBlockDeltaEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ContentBlockDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L963"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "MessageStartEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class MessageStartEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L974"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "MessageStopEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class MessageStopEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L1002"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ConverseStreamMetrics",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ConverseStreamMetrics",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L1016"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ConverseStreamTrace",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ConverseStreamTrace",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L1026"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ConverseStreamMetadataEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ConverseStreamMetadataEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L1037"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "DocumentFormat",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare const DocumentFormat: Schema.Literal<[\"csv\", \"doc\", \"docx\", \"html\", \"md\", \"pdf\", \"txt\", \"xls\", \"xlsx\"]>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L127"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ImageFormat",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare const ImageFormat: Schema.Literal<[\"gif\", \"jpeg\", \"png\", \"webp\"]>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L197"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "IntZeroOrGreater",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare const IntZeroOrGreater: Schema.filter<typeof Schema.Int>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L671"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "StopReason",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare const StopReason: Schema.Literal<[\"end_turn\", \"tool_use\", \"max_tokens\", \"stop_sequence\", \"guardrail_intervened\", \"content_filtered\"]>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L984"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ConverseResponseStreamEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare const ConverseResponseStreamEvent: Schema.Schema<({ readonly messageStart: MessageStartEvent; } & { readonly type: \"messageStart\"; }) | ({ readonly messageStop: MessageStopEvent; } & { readonly type: \"messageStop\"; }) | ({ readonly contentBlockStart: ContentBlockStartEvent; } & { readonly type: \"contentBlockStart\"; }) | ({ readonly contentBlockDelta: ContentBlockDeltaEvent; } & { readonly type: \"contentBlockDelta\"; }) | ({ readonly contentBlockStop: ContentBlockStopEvent; } & { readonly type: \"contentBlockStop\"; }) | ({ readonly metadata: ConverseStreamMetadataEvent; } & { readonly type: \"metadata\"; }) | ({ readonly internalServerException: { readonly [x: string]: unknown; }; } & { readonly type: \"internalServerException\"; }) | ({ readonly modelStreamErrorException: { readonly [x: string]: unknown; }; } & { readonly type: \"modelStreamErrorException\"; }) | ({ readonly serviceUnavailableException: { readonly [x: string]: unknown; }; } & { readonly type: \"serviceUnavailableException\"; }) | ({ readonly throttlingException: { readonly [x: string]: unknown; }; } & { readonly type: \"throttlingException\"; }) | ({ readonly validationException: { readonly [x: string]: unknown; }; } & { readonly type: \"validationException\"; }), { readonly messageStart: { readonly role: \"user\" | \"assistant\"; }; } | { readonly messageStop: { readonly stopReason: \"end_turn\" | \"tool_use\" | \"max_tokens\" | \"stop_sequence\" | \"guardrail_intervened\" | \"content_filtered\"; readonly additionalModelResponseFields?: { readonly [x: string]: unknown; } | undefined; }; } | { readonly contentBlockStart: { readonly start: { readonly toolUse?: { readonly name: string; readonly toolUseId: string; } | undefined; }; readonly contentBlockIndex: number; }; } | { readonly contentBlockDelta: { readonly contentBlockIndex: number; readonly delta: { readonly reasoningContent: { readonly redactedContent: string; } | { readonly signature: string; } | { readonly text: string; }; } | { readonly text: string; } | { readonly toolUse: { readonly input: string; }; }; }; } | { readonly contentBlockStop: { readonly contentBlockIndex: number; }; } | { readonly metadata: { readonly metrics: { readonly latencyMs: number; }; readonly usage: { readonly inputTokens: number; readonly outputTokens: number; readonly totalTokens: number; readonly cacheReadInputTokens?: number | undefined; readonly cacheWriteInputTokens?: number | undefined; }; readonly performanceConfig?: { readonly latency?: \"standard\" | \"optimized\" | undefined; } | undefined; readonly trace?: { readonly guardrail?: { readonly actionReason?: string | undefined; readonly inputAssessment?: { readonly [x: string]: { readonly contentPolicy?: { readonly filters: ReadonlyArray<{ readonly type: \"HATE\" | \"INSULTS\" | \"MISCONDUCT\" | \"PROMPT_ATTACK\" | \"SEXUAL\" | \"VIOLENCE\"; readonly action: \"BLOCKED\" | \"NONE\"; readonly confidence: \"NONE\" | \"LOW\" | \"MEDIUM\" | \"HIGH\"; readonly detected?: boolean | undefined; readonly filterStrength?: \"NONE\" | \"LOW\" | \"MEDIUM\" | \"HIGH\" | undefined; }>; } | undefined; readonly contextualGroundingPolicy?: { readonly filters?: ReadonlyArray<{ readonly type: \"GROUNDING\" | \"RELEVANCE\"; readonly action: \"BLOCKED\" | \"NONE\"; readonly score: number; readonly threshold: number; readonly detected?: boolean | undefined; }> | undefined; } | undefined; readonly invocationMetrics?: { readonly usage?: { readonly contentPolicyUnits: number; readonly contextualGroundingPolicyUnits: number; readonly sensitiveInformationPolicyFreeUnits: number; readonly sensitiveInformationPolicyUnits: number; readonly topicPolicyUnits: number; readonly wordPolicyUnits: number; readonly contentPolicyImageUnits?: number | undefined; } | undefined; readonly guardrailCoverage?: { readonly images?: { readonly guarded?: number | undefined; readonly total?: number | undefined; } | undefined; readonly textCharacters?: { readonly guarded?: number | undefined; readonly total?: number | undefined; } | undefined; } | undefined; readonly guardrailProcessingLatency?: number | undefined; } | undefined; readonly sensitiveInformationPolicy?: { readonly piiEntities: ReadonlyArray<{ readonly type: \"ADDRESS\" | \"AGE\" | \"AWS_ACCESS_KEY\" | \"AWS_SECRET_KEY\" | \"CA_HEALTH_NUMBER\" | \"CA_SOCIAL_INSURANCE_NUMBER\" | \"CREDIT_DEBIT_CARD_CVV\" | \"CREDIT_DEBIT_CARD_EXPIRY\" | \"CREDIT_DEBIT_CARD_NUMBER\" | \"DRIVER_ID\" | \"EMAIL\" | \"INTERNATIONAL_BANK_ACCOUNT_NUMBER\" | \"IP_ADDRESS\" | \"LICENSE_PLATE\" | \"MAC_ADDRESS\" | \"NAME\" | \"PASSWORD\" | \"PHONE\" | \"PIN\" | \"SWIFT_CODE\" | \"UK_NATIONAL_HEALTH_SERVICE_NUMBER\" | \"UK_NATIONAL_INSURANCE_NUMBER\" | \"UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER\" | \"URL\" | \"USERNAME\" | \"US_BANK_ACCOUNT_NUMBER\" | \"US_BANK_ROUTING_NUMBER\" | \"US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER\" | \"US_PASSPORT_NUMBER\" | \"US_SOCIAL_SECURITY_NUMBER\" | \"VEHICLE_IDENTIFICATION_NUMBER\"; readonly action: \"BLOCKED\" | \"NONE\" | \"ANONYMIZED\"; readonly match: string; readonly detected?: boolean | undefined; }>; readonly regexes: ReadonlyArray<{ readonly action: \"BLOCKED\" | \"NONE\" | \"ANONYMIZED\"; readonly name?: string | undefined; readonly detected?: boolean | undefined; readonly match?: string | undefined; readonly regex?: string | undefined; }>; } | undefined; readonly topicPolicy?: { readonly topics: ReadonlyArray<{ readonly type: \"DENY\"; readonly name: string; readonly action: \"BLOCKED\" | \"NONE\"; readonly detected?: boolean | undefined; }>; } | undefined; readonly wordPolicy?: { readonly customWords: { readonly action: \"BLOCKED\" | \"NONE\"; readonly match: string; readonly detected?: boolean | undefined; }; readonly managedWordLists: { readonly type: \"PROFANITY\"; readonly action: \"BLOCKED\" | \"NONE\"; readonly match: string; readonly detected?: boolean | undefined; }; } | undefined; }; } | undefined; readonly modelOutput?: ReadonlyArray<string> | undefined; readonly outputAssessments?: { readonly [x: string]: { readonly contentPolicy?: { readonly filters: ReadonlyArray<{ readonly type: \"HATE\" | \"INSULTS\" | \"MISCONDUCT\" | \"PROMPT_ATTACK\" | \"SEXUAL\" | \"VIOLENCE\"; readonly action: \"BLOCKED\" | \"NONE\"; readonly confidence: \"NONE\" | \"LOW\" | \"MEDIUM\" | \"HIGH\"; readonly detected?: boolean | undefined; readonly filterStrength?: \"NONE\" | \"LOW\" | \"MEDIUM\" | \"HIGH\" | undefined; }>; } | undefined; readonly contextualGroundingPolicy?: { readonly filters?: ReadonlyArray<{ readonly type: \"GROUNDING\" | \"RELEVANCE\"; readonly action: \"BLOCKED\" | \"NONE\"; readonly score: number; readonly threshold: number; readonly detected?: boolean | undefined; }> | undefined; } | undefined; readonly invocationMetrics?: { readonly usage?: { readonly contentPolicyUnits: number; readonly contextualGroundingPolicyUnits: number; readonly sensitiveInformationPolicyFreeUnits: number; readonly sensitiveInformationPolicyUnits: number; readonly topicPolicyUnits: number; readonly wordPolicyUnits: number; readonly contentPolicyImageUnits?: number | undefined; } | undefined; readonly guardrailCoverage?: { readonly images?: { readonly guarded?: number | undefined; readonly total?: number | undefined; } | undefined; readonly textCharacters?: { readonly guarded?: number | undefined; readonly total?: number | undefined; } | undefined; } | undefined; readonly guardrailProcessingLatency?: number | undefined; } | undefined; readonly sensitiveInformationPolicy?: { readonly piiEntities: ReadonlyArray<{ readonly type: \"ADDRESS\" | \"AGE\" | \"AWS_ACCESS_KEY\" | \"AWS_SECRET_KEY\" | \"CA_HEALTH_NUMBER\" | \"CA_SOCIAL_INSURANCE_NUMBER\" | \"CREDIT_DEBIT_CARD_CVV\" | \"CREDIT_DEBIT_CARD_EXPIRY\" | \"CREDIT_DEBIT_CARD_NUMBER\" | \"DRIVER_ID\" | \"EMAIL\" | \"INTERNATIONAL_BANK_ACCOUNT_NUMBER\" | \"IP_ADDRESS\" | \"LICENSE_PLATE\" | \"MAC_ADDRESS\" | \"NAME\" | \"PASSWORD\" | \"PHONE\" | \"PIN\" | \"SWIFT_CODE\" | \"UK_NATIONAL_HEALTH_SERVICE_NUMBER\" | \"UK_NATIONAL_INSURANCE_NUMBER\" | \"UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER\" | \"URL\" | \"USERNAME\" | \"US_BANK_ACCOUNT_NUMBER\" | \"US_BANK_ROUTING_NUMBER\" | \"US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER\" | \"US_PASSPORT_NUMBER\" | \"US_SOCIAL_SECURITY_NUMBER\" | \"VEHICLE_IDENTIFICATION_NUMBER\"; readonly action: \"BLOCKED\" | \"NONE\" | \"ANONYMIZED\"; readonly match: string; readonly detected?: boolean | undefined; }>; readonly regexes: ReadonlyArray<{ readonly action: \"BLOCKED\" | \"NONE\" | \"ANONYMIZED\"; readonly name?: string | undefined; readonly detected?: boolean | undefined; readonly match?: string | undefined; readonly regex?: string | undefined; }>; } | undefined; readonly topicPolicy?: { readonly topics: ReadonlyArray<{ readonly type: \"DENY\"; readonly name: string; readonly action: \"BLOCKED\" | \"NONE\"; readonly detected?: boolean | undefined; }>; } | undefined; readonly wordPolicy?: { readonly customWords: { readonly action: \"BLOCKED\" | \"NONE\"; readonly match: string; readonly detected?: boolean | undefined; }; readonly managedWordLists: { readonly type: \"PROFANITY\"; readonly action: \"BLOCKED\" | \"NONE\"; readonly match: string; readonly detected?: boolean | undefined; }; } | undefined; }; } | undefined; } | undefined; readonly promptRouter?: { readonly invokedModelId?: string | undefined; } | undefined; } | undefined; }; } | { readonly internalServerException: { readonly [x: string]: unknown; }; } | { readonly modelStreamErrorException: { readonly [x: string]: unknown; }; } | { readonly serviceUnavailableException: { readonly [x: string]: unknown; }; } | { readonly throttlingException: { readonly [x: string]: unknown; }; } | { readonly validationException: { readonly [x: string]: unknown; }; }, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L1050"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "DocumentFormat",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "type DocumentFormat = typeof DocumentFormat.Type",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L142"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ImageFormat",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "type ImageFormat = typeof ImageFormat.Type",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L202"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "StopReason",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "type StopReason = typeof StopReason.Type",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L996"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AmazonBedrockSchema.ts",
      "path": "src/AmazonBedrockSchema.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "ConverseResponseStreamEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type ConverseResponseStreamEvent = typeof ConverseResponseStreamEvent.Type",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockSchema.ts#L1126"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockTool.ts",
      "path": "src/AmazonBedrockTool.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AnthropicBash_20241022",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const AnthropicBash_20241022: <Mode extends Tool.FailureMode | undefined = undefined>(args: {} & { readonly failureMode?: Mode | undefined; }) => Tool.ProviderDefined<\"AnthropicBash\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: typeof Schema.NonEmptyString; restart: Schema.optional<typeof Schema.Boolean>; }>; readonly success: typeof Schema.String; readonly failure: typeof Schema.Never; readonly failureMode: Mode extends undefined ? \"error\" : Mode; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockTool.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockTool.ts",
      "path": "src/AmazonBedrockTool.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AnthropicBash_20250124",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const AnthropicBash_20250124: <Mode extends Tool.FailureMode | undefined = undefined>(args: {} & { readonly failureMode?: Mode | undefined; }) => Tool.ProviderDefined<\"AnthropicBash\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: typeof Schema.NonEmptyString; restart: Schema.optional<typeof Schema.Boolean>; }>; readonly success: typeof Schema.String; readonly failure: typeof Schema.Never; readonly failureMode: Mode extends undefined ? \"error\" : Mode; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockTool.ts#L36"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockTool.ts",
      "path": "src/AmazonBedrockTool.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AnthropicComputerUse_20241022",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const AnthropicComputerUse_20241022: <Mode extends Tool.FailureMode | undefined = undefined>(args: { readonly display_height_px: number; readonly display_width_px: number; readonly cache_control?: { readonly type: \"ephemeral\"; readonly ttl?: \"5m\" | \"1h\" | null | undefined; } | null | undefined; readonly display_number?: number | null | undefined; readonly failureMode?: Mode | undefined; }) => Tool.ProviderDefined<\"AnthropicComputerUse\", { readonly args: Schema.Struct<{ readonly cache_control: Schema.optionalWith<typeof Generated.BetaCacheControlEphemeral, { nullable: true; }>; readonly display_height_px: Schema.filter<typeof Schema.Int>; readonly display_number: Schema.optionalWith<Schema.filter<typeof Schema.Int>, { nullable: true; }>; readonly display_width_px: Schema.filter<typeof Schema.Int>; }>; readonly parameters: Schema.Struct<{ action: Schema.Literal<[\"screenshot\", \"left_click\", \"type\", \"key\", \"mouse_move\"]>; coordinate: Schema.optional<Schema.Tuple2<typeof Schema.Number, typeof Schema.Number>>; text: Schema.optional<typeof Schema.String>; }>; readonly success: typeof Schema.String; readonly failure: typeof Schema.Never; readonly failureMode: Mode extends undefined ? \"error\" : Mode; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockTool.ts#L59"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockTool.ts",
      "path": "src/AmazonBedrockTool.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AnthropicComputerUse_20250124",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const AnthropicComputerUse_20250124: <Mode extends Tool.FailureMode | undefined = undefined>(args: { readonly display_height_px: number; readonly display_width_px: number; readonly cache_control?: { readonly type: \"ephemeral\"; readonly ttl?: \"5m\" | \"1h\" | null | undefined; } | null | undefined; readonly display_number?: number | null | undefined; readonly failureMode?: Mode | undefined; }) => Tool.ProviderDefined<\"AnthropicComputerUse\", { readonly args: Schema.Struct<{ readonly cache_control: Schema.optionalWith<typeof Generated.BetaCacheControlEphemeral, { nullable: true; }>; readonly display_height_px: Schema.filter<typeof Schema.Int>; readonly display_number: Schema.optionalWith<Schema.filter<typeof Schema.Int>, { nullable: true; }>; readonly display_width_px: Schema.filter<typeof Schema.Int>; }>; readonly parameters: Schema.Struct<{ action: Schema.Literal<[\"screenshot\", \"left_click\", \"type\", \"key\", \"mouse_move\", \"scroll\", \"left_click_drag\", \"middle_click\", \"right_click\", \"double_click\", \"triple_click\", \"left_mouse_down\", \"left_mouse_up\", \"hold_key\", \"wait\"]>; coordinate: Schema.optional<Schema.Tuple2<typeof Schema.Number, typeof Schema.Number>>; start_coordinate: Schema.optional<Schema.Tuple2<typeof Schema.Number, typeof Schema.Number>>; text: Schema.optional<typeof Schema.String>; scroll_direction: Schema.optional<Schema.Literal<[\"up\", \"down\", \"left\", \"right\"]>>; scroll_amount: Schema.optional<typeof Schema.Number>; duration: Schema.optional<typeof Schema.Number>; }>; readonly success: typeof Schema.String; readonly failure: typeof Schema.Never; readonly failureMode: Mode extends undefined ? \"error\" : Mode; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockTool.ts#L102"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockTool.ts",
      "path": "src/AmazonBedrockTool.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AnthropicTextEditor_20241022",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const AnthropicTextEditor_20241022: <Mode extends Tool.FailureMode | undefined = undefined>(args: { readonly failureMode?: Mode | undefined; }) => Tool.ProviderDefined<\"AnthropicTextEditor\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: Schema.Literal<[\"view\", \"create\", \"str_replace\", \"insert\", \"undo_edit\"]>; path: typeof Schema.String; file_text: Schema.optional<typeof Schema.String>; insert_line: Schema.optional<typeof Schema.Number>; new_str: Schema.optional<typeof Schema.String>; old_str: Schema.optional<typeof Schema.String>; view_range: Schema.optional<Schema.Array$<typeof Schema.Number>>; }>; readonly success: typeof Schema.Void; readonly failure: typeof Schema.Never; readonly failureMode: Mode extends undefined ? \"error\" : Mode; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockTool.ts#L167"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockTool.ts",
      "path": "src/AmazonBedrockTool.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AnthropicTextEditor_20250124",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const AnthropicTextEditor_20250124: <Mode extends Tool.FailureMode | undefined = undefined>(args: { readonly failureMode?: Mode | undefined; }) => Tool.ProviderDefined<\"AnthropicTextEditor\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: Schema.Literal<[\"view\", \"create\", \"str_replace\", \"insert\", \"undo_edit\"]>; path: typeof Schema.String; file_text: Schema.optional<typeof Schema.String>; insert_line: Schema.optional<typeof Schema.Number>; new_str: Schema.optional<typeof Schema.String>; old_str: Schema.optional<typeof Schema.String>; view_range: Schema.optional<Schema.Array$<typeof Schema.Number>>; }>; readonly success: typeof Schema.Void; readonly failure: typeof Schema.Never; readonly failureMode: Mode extends undefined ? \"error\" : Mode; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockTool.ts#L195"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockTool.ts",
      "path": "src/AmazonBedrockTool.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AnthropicTextEditor_20250429",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const AnthropicTextEditor_20250429: <Mode extends Tool.FailureMode | undefined = undefined>(args: { readonly failureMode?: Mode | undefined; }) => Tool.ProviderDefined<\"AnthropicTextEditor\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: Schema.Literal<[\"view\", \"create\", \"str_replace\", \"insert\"]>; path: typeof Schema.String; file_text: Schema.optional<typeof Schema.String>; insert_line: Schema.optional<typeof Schema.Number>; new_str: Schema.optional<typeof Schema.String>; old_str: Schema.optional<typeof Schema.String>; view_range: Schema.optional<Schema.Array$<typeof Schema.Number>>; }>; readonly success: typeof Schema.Void; readonly failure: typeof Schema.Never; readonly failureMode: Mode extends undefined ? \"error\" : Mode; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockTool.ts#L223"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AmazonBedrockTool.ts",
      "path": "src/AmazonBedrockTool.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AnthropicTextEditor_20250728",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const AnthropicTextEditor_20250728: <Mode extends Tool.FailureMode | undefined = undefined>(args: { readonly failureMode?: Mode | undefined; }) => Tool.ProviderDefined<\"AnthropicTextEditor\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: Schema.Literal<[\"view\", \"create\", \"str_replace\", \"insert\"]>; path: typeof Schema.String; file_text: Schema.optional<typeof Schema.String>; insert_line: Schema.optional<typeof Schema.Number>; new_str: Schema.optional<typeof Schema.String>; old_str: Schema.optional<typeof Schema.String>; view_range: Schema.optional<Schema.Array$<typeof Schema.Number>>; }>; readonly success: typeof Schema.Void; readonly failure: typeof Schema.Never; readonly failureMode: Mode extends undefined ? \"error\" : Mode; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/AmazonBedrockTool.ts#L251"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "EventStreamEncoding.ts",
      "path": "src/EventStreamEncoding.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "makeChannel",
    "description": "An event stream encoding parser.\n\nSee the [AWS Documentation](https://docs.aws.amazon.com/lexv2/latest/dg/event-stream-encoding.html)\nfor more information.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "declare const makeChannel: <A, I, R, IE, Done>(schema: Schema.Schema<A, I, R>, options?: { readonly bufferSize?: number; }) => Channel.Channel<Chunk.Chunk<A>, Chunk.Chunk<Uint8Array<ArrayBufferLike>>, IE | ParseError, IE, void, Done, R>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/EventStreamEncoding.ts#L22"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AmazonBedrockClient",
    "description": "Re-exports all named exports from the \"./AmazonBedrockClient.js\" module as `AmazonBedrockClient`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as AmazonBedrockClient from \"./AmazonBedrockClient.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/index.ts#L4"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AmazonBedrockConfig",
    "description": "Re-exports all named exports from the \"./AmazonBedrockConfig.js\" module as `AmazonBedrockConfig`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as AmazonBedrockConfig from \"./AmazonBedrockConfig.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/index.ts#L9"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AmazonBedrockLanguageModel",
    "description": "Re-exports all named exports from the \"./AmazonBedrockLanguageModel.js\" module as `AmazonBedrockLanguageModel`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as AmazonBedrockLanguageModel from \"./AmazonBedrockLanguageModel.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/index.ts#L14"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AmazonBedrockSchema",
    "description": "Re-exports all named exports from the \"./AmazonBedrockSchema.js\" module as `AmazonBedrockSchema`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as AmazonBedrockSchema from \"./AmazonBedrockSchema.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/index.ts#L19"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "AmazonBedrockTool",
    "description": "Re-exports all named exports from the \"./AmazonBedrockTool.js\" module as `AmazonBedrockTool`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as AmazonBedrockTool from \"./AmazonBedrockTool.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/index.ts#L24"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-amazon-bedrock",
    "name": "EventStreamEncoding",
    "description": "Re-exports all named exports from the \"./EventStreamEncoding.js\" module as `EventStreamEncoding`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as EventStreamEncoding from \"./EventStreamEncoding.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/amazon-bedrock/src/index.ts#L29"
  }
]