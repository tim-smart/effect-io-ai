[
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class AnthropicClient",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L30"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "PingEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class PingEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L330"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ErrorEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ErrorEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L340"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "MessageStartEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class MessageStartEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L363"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ServerToolUsage",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ServerToolUsage",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L374"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "MessageDelta",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class MessageDelta",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L390"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "MessageDeltaUsage",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class MessageDeltaUsage",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L416"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "MessageDeltaEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class MessageDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L460"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "MessageStopEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class MessageStopEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L487"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ContentBlockStartEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ContentBlockStartEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L497"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "CitationsDelta",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class CitationsDelta",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L509"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "InputJsonContentBlockDelta",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class InputJsonContentBlockDelta",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L526"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "SignatureContentBlockDelta",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class SignatureContentBlockDelta",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L537"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "TextContentBlockDelta",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class TextContentBlockDelta",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L548"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ThinkingContentBlockDelta",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ThinkingContentBlockDelta",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L559"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ContentBlockDeltaEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ContentBlockDeltaEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L570"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ContentBlockStopEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare class ContentBlockStopEvent",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L588"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly apiKey?: Redacted.Redacted | undefined; readonly apiUrl?: string | undefined; readonly anthropicVersion?: string | undefined; readonly organizationId?: Redacted.Redacted | undefined; readonly projectId?: Redacted.Redacted | undefined; readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined; }) => Effect.Effect<Service, never, HttpClient.HttpClient | Scope.Scope>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L84"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "MessageStreamEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare const MessageStreamEvent: Schema.Union<[typeof PingEvent, typeof ErrorEvent, typeof MessageStartEvent, typeof MessageDeltaEvent, typeof MessageStopEvent, typeof ContentBlockStartEvent, typeof ContentBlockDeltaEvent, typeof ContentBlockStopEvent]>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L599"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly apiKey?: Redacted.Redacted | undefined; readonly apiUrl?: string | undefined; readonly anthropicVersion?: string | undefined; readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined; }) => Layer.Layer<AnthropicClient, never, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L620"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "layerConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layerConfig: (options: { readonly apiKey?: Config.Config<Redacted.Redacted | undefined> | undefined; readonly apiUrl?: Config.Config<string | undefined> | undefined; readonly anthropicVersion?: Config.Config<string | undefined> | undefined; readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined; }) => Layer.Layer<AnthropicClient, ConfigError, HttpClient.HttpClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L698"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Service",
    "description": "Represents the interface that the `AnthropicClient` service provides.\n\nThis service abstracts the complexity of communicating with Anthropic's API,\nproviding both high-level text generation methods and low-level HTTP access\nfor advanced use cases.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface Service {\n  /**\n   * The underlying HTTP client capable of communicating with the Anthropic API.\n   *\n   * This client is pre-configured with authentication, base URL, and standard\n   * headers required for Anthropic API communication. It provides direct access\n   * to the generated Anthropic API client for operations not covered by the\n   * higher-level methods.\n   *\n   * Use this when you need to:\n   * - Access provider-specific API endpoints not available through the AI SDK\n   * - Implement custom request/response handling\n   * - Use Anthropic API features not yet supported by the Effect AI abstractions\n   * - Perform batch operations or non-streaming requests\n   *\n   * The client automatically handles authentication and follows Anthropic's\n   * API conventions for request formatting and error handling.\n   */\n  readonly client: Generated.Client\n\n  readonly streamRequest: <A, I, R>(\n    request: HttpClientRequest.HttpClientRequest,\n    schema: Schema.Schema<A, I, R>\n  ) => Stream.Stream<A, AiError.AiError, R>\n\n  readonly createMessage: (options: {\n    readonly params?: typeof Generated.BetaMessagesPostParams.Encoded | undefined\n    readonly payload: typeof Generated.BetaCreateMessageParams.Encoded\n  }) => Effect.Effect<Generated.BetaMessage, AiError.AiError>\n\n  readonly createMessageStream: (options: {\n    readonly params?: typeof Generated.BetaMessagesPostParams.Encoded | undefined\n    readonly payload: Omit<typeof Generated.BetaCreateMessageParams.Encoded, \"stream\">\n  }) => Stream.Stream<MessageStreamEvent, AiError.AiError>\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L44"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "MessageStreamEvent",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type MessageStreamEvent = typeof MessageStreamEvent.Type",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicClient.ts#L614"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicConfig.ts",
      "path": "src/AnthropicConfig.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class AnthropicConfig",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicConfig.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicConfig.ts",
      "path": "src/AnthropicConfig.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "withClientTransform",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "declare const withClientTransform: { (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicConfig.ts#L43"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AnthropicConfig.ts",
      "path": "src/AnthropicConfig.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicConfig.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "export interface Service {\n    readonly transformClient?: (client: HttpClient) => HttpClient\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicConfig.ts#L34"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Config",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Context",
    "signature": "declare class Config",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L44"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: (options: { readonly model: (string & {}) | Model; readonly config?: Omit<Config.Service, \"model\">; }) => Effect.Effect<LanguageModel.Service, never, AnthropicClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L318"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "withConfigOverride",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "declare const withConfigOverride: { (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>; }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L416"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "prepareTools",
    "description": "A helper method which takes in large language model provider options from\nthe base Effect AI SDK as well as Anthropic request configuration options\nand returns the prepared tools, tool choice, and Anthropic betas to include\nin a request.\n\nThis method is primarily exposed for use by other Effect provider\nintegrations which can utilize Anthropic models (i.e. Amazon Bedrock).",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tool Calling",
    "signature": "declare const prepareTools: (options: LanguageModel.ProviderOptions, config: Config.Service) => Effect.Effect<{ readonly betas: ReadonlySet<string>; readonly tools: ReadonlyArray<AnthropicTools> | undefined; readonly toolChoice: typeof Generated.BetaToolChoice.Encoded | undefined; }, AiError.AiError>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L1319"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Ai Models",
    "signature": "declare const model: (model: (string & {}) | Model, config?: Omit<Config.Service, \"model\">) => AiModel.Model<\"anthropic\", LanguageModel.LanguageModel, AnthropicClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L298"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "modelWithTokenizer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Ai Models",
    "signature": "declare const modelWithTokenizer: (model: (string & {}) | Model, config?: Omit<Config.Service, \"model\">) => AiModel.Model<\"anthropic\", LanguageModel.LanguageModel | Tokenizer.Tokenizer, AnthropicClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L308"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: (options: { readonly model: (string & {}) | Model; readonly config?: Omit<Config.Service, \"model\">; }) => Layer.Layer<LanguageModel.LanguageModel, never, AnthropicClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L396"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "layerWithTokenizer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layerWithTokenizer: (options: { readonly model: (string & {}) | Model; readonly config?: Omit<Config.Service, \"model\">; }) => Layer.Layer<LanguageModel.LanguageModel | Tokenizer.Tokenizer, never, AnthropicClient>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L406"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type Model = typeof Generated.Model.Encoded",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L34"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicReasoningInfo",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Provider Metadata",
    "signature": "type AnthropicReasoningInfo = {\n  readonly type: \"thinking\"\n  /**\n   * Thinking content as an encrypted string, which is used to verify\n   * that thinking content was indeed generated by Anthropic's API.\n   */\n  readonly signature: typeof Generated.ResponseThinkingBlock.fields.thinking.Encoded\n} | {\n  readonly type: \"redacted_thinking\"\n  /**\n   * Thinking content which was flagged by Anthropic's safety systems, and\n   * was therefore encrypted.\n   */\n  readonly redactedData: typeof Generated.RequestRedactedThinkingBlock.fields.data.Encoded\n}",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L87"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicTools",
    "description": "Represents all possible Anthropic provider-defined tools.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "type AnthropicTools = | typeof Generated.BetaTool.Encoded\n  | typeof Generated.BetaBashTool20241022.Encoded\n  | typeof Generated.BetaBashTool20250124.Encoded\n  | typeof Generated.BetaComputerUseTool20241022.Encoded\n  | typeof Generated.BetaComputerUseTool20250124.Encoded\n  | typeof Generated.BetaTextEditor20241022.Encoded\n  | typeof Generated.BetaTextEditor20250124.Encoded\n  | typeof Generated.BetaTextEditor20250429.Encoded\n  | typeof Generated.BetaTextEditor20250728.Encoded",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L1296"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AnthropicLanguageModel.ts",
      "path": "src/AnthropicLanguageModel.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Config.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Configuration",
    "signature": "export interface Service extends\n    Simplify<\n      Partial<\n        Omit<\n          typeof Generated.CreateMessageParams.Encoded,\n          \"messages\" | \"tools\" | \"tool_choice\" | \"stream\"\n        >\n      >\n    >\n  {\n    readonly disableParallelToolCalls?: boolean\n  }",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicLanguageModel.ts#L65"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTokenizer.ts",
      "path": "src/AnthropicTokenizer.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Constructors",
    "signature": "declare const make: Tokenizer.Service",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTokenizer.ts#L17"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTokenizer.ts",
      "path": "src/AnthropicTokenizer.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Layers",
    "signature": "declare const layer: Layer.Layer<Tokenizer.Tokenizer, never, never>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTokenizer.ts#L59"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ProviderDefinedTools",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "declare const ProviderDefinedTools: Schema.Union<[typeof Generated.BetaBashTool20241022, typeof Generated.BetaBashTool20250124, typeof Generated.BetaCodeExecutionTool20250522, typeof Generated.BetaComputerUseTool20241022, typeof Generated.BetaComputerUseTool20250124, typeof Generated.BetaTextEditor20241022, typeof Generated.BetaTextEditor20250124, typeof Generated.BetaTextEditor20250429, typeof Generated.BetaTextEditor20250728, typeof Generated.BetaWebSearchTool20250305]>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L13"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Bash_20241022",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const Bash_20241022: (args: {}) => Tool.ProviderDefined<\"AnthropicBash\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: typeof Schema.NonEmptyString; restart: Schema.optional<typeof Schema.Boolean>; }>; readonly success: typeof Schema.String; readonly failure: typeof Schema.Never; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L47"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Bash_20250124",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const Bash_20250124: (args: {}) => Tool.ProviderDefined<\"AnthropicBash\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: typeof Schema.NonEmptyString; restart: Schema.optional<typeof Schema.Boolean>; }>; readonly success: typeof Schema.String; readonly failure: typeof Schema.Never; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L70"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "CodeExecution_20250522",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const CodeExecution_20250522: (args: { readonly cache_control?: { readonly type: \"ephemeral\"; readonly ttl?: \"5m\" | \"1h\" | null | undefined; } | null | undefined; }) => Tool.ProviderDefined<\"AnthropicCodeExecution\", { readonly args: Schema.Struct<{ readonly cache_control: Schema.optionalWith<typeof Generated.BetaCacheControlEphemeral, { nullable: true; }>; }>; readonly parameters: Schema.Struct<{}>; readonly success: typeof Generated.BetaResponseCodeExecutionResultBlock; readonly failure: typeof Generated.BetaResponseCodeExecutionToolResultError; }, false>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L93"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "CodeExecution_20250825",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const CodeExecution_20250825: (args: { readonly cache_control?: { readonly type: \"ephemeral\"; readonly ttl?: \"5m\" | \"1h\" | null | undefined; } | null | undefined; }) => Tool.ProviderDefined<\"AnthropicCodeExecution\", { readonly args: Schema.Struct<{ readonly cache_control: Schema.optionalWith<typeof Generated.BetaCacheControlEphemeral, { nullable: true; }>; }>; readonly parameters: Schema.Struct<{}>; readonly success: Schema.Union<[typeof Generated.BetaResponseBashCodeExecutionResultBlock, typeof Generated.BetaResponseTextEditorCodeExecutionViewResultBlock, typeof Generated.BetaResponseTextEditorCodeExecutionCreateResultBlock, typeof Generated.BetaResponseTextEditorCodeExecutionStrReplaceResultBlock]>; readonly failure: Schema.Union<[typeof Generated.BetaResponseCodeExecutionToolResultError, typeof Generated.BetaResponseTextEditorCodeExecutionToolResultError]>; }, false>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L106"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Coordinate",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Models",
    "signature": "declare const Coordinate: Schema.Tuple2<typeof Schema.Number, typeof Schema.Number>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L127"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ComputerUse_20241022",
    "description": "Allow Claude to interact with computer environments through the computer use\ntool, which provides screenshot capabilities and mouse/keyboard control for\nautonomous desktop interaction.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const ComputerUse_20241022: (args: { readonly display_height_px: number; readonly display_width_px: number; readonly cache_control?: { readonly type: \"ephemeral\"; readonly ttl?: \"5m\" | \"1h\" | null | undefined; } | null | undefined; readonly display_number?: number | null | undefined; }) => Tool.ProviderDefined<\"AnthropicComputerUse\", { readonly args: Schema.Struct<{ readonly cache_control: Schema.optionalWith<typeof Generated.BetaCacheControlEphemeral, { nullable: true; }>; readonly display_height_px: Schema.filter<typeof Schema.Int>; readonly display_number: Schema.optionalWith<Schema.filter<typeof Schema.Int>, { nullable: true; }>; readonly display_width_px: Schema.filter<typeof Schema.Int>; }>; readonly parameters: Schema.Struct<{ action: Schema.Literal<[\"screenshot\", \"left_click\", \"type\", \"key\", \"mouse_move\"]>; coordinate: Schema.optional<Schema.Tuple2<typeof Schema.Number, typeof Schema.Number>>; text: Schema.optional<typeof Schema.String>; }>; readonly success: typeof Schema.String; readonly failure: typeof Schema.Never; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L137"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ComputerUse_20250124",
    "description": "Allow Claude to interact with computer environments through the computer use\ntool, which provides screenshot capabilities and mouse/keyboard control for\nautonomous desktop interaction.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const ComputerUse_20250124: (args: { readonly display_height_px: number; readonly display_width_px: number; readonly cache_control?: { readonly type: \"ephemeral\"; readonly ttl?: \"5m\" | \"1h\" | null | undefined; } | null | undefined; readonly display_number?: number | null | undefined; }) => Tool.ProviderDefined<\"AnthropicComputerUse\", { readonly args: Schema.Struct<{ readonly cache_control: Schema.optionalWith<typeof Generated.BetaCacheControlEphemeral, { nullable: true; }>; readonly display_height_px: Schema.filter<typeof Schema.Int>; readonly display_number: Schema.optionalWith<Schema.filter<typeof Schema.Int>, { nullable: true; }>; readonly display_width_px: Schema.filter<typeof Schema.Int>; }>; readonly parameters: Schema.Struct<{ action: Schema.Literal<[\"screenshot\", \"left_click\", \"type\", \"key\", \"mouse_move\", \"scroll\", \"left_click_drag\", \"middle_click\", \"right_click\", \"double_click\", \"triple_click\", \"left_mouse_down\", \"left_mouse_up\", \"hold_key\", \"wait\"]>; coordinate: Schema.optional<Schema.Tuple2<typeof Schema.Number, typeof Schema.Number>>; start_coordinate: Schema.optional<Schema.Tuple2<typeof Schema.Number, typeof Schema.Number>>; text: Schema.optional<typeof Schema.String>; scroll_direction: Schema.optional<Schema.Literal<[\"up\", \"down\", \"left\", \"right\"]>>; scroll_amount: Schema.optional<typeof Schema.Number>; duration: Schema.optional<typeof Schema.Number>; }>; readonly success: typeof Schema.String; readonly failure: typeof Schema.Never; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L186"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "TextEditor_20241022",
    "description": "Allow Claude to directly interact with your files, providing hands-on\nassistance rather than just suggesting changes.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const TextEditor_20241022: (args: {}) => Tool.ProviderDefined<\"AnthropicTextEditor\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: Schema.Literal<[\"view\", \"create\", \"str_replace\", \"insert\", \"undo_edit\"]>; path: typeof Schema.String; file_text: Schema.optional<typeof Schema.String>; insert_line: Schema.optional<typeof Schema.Number>; new_str: Schema.optional<typeof Schema.String>; old_str: Schema.optional<typeof Schema.String>; view_range: Schema.optional<Schema.Array$<typeof Schema.Number>>; }>; readonly success: typeof Schema.Void; readonly failure: typeof Schema.Never; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L285"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "TextEditor_20250124",
    "description": "Allow Claude to directly interact with your files, providing hands-on\nassistance rather than just suggesting changes.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const TextEditor_20250124: (args: {}) => Tool.ProviderDefined<\"AnthropicTextEditor\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: Schema.Literal<[\"view\", \"create\", \"str_replace\", \"insert\", \"undo_edit\"]>; path: typeof Schema.String; file_text: Schema.optional<typeof Schema.String>; insert_line: Schema.optional<typeof Schema.Number>; new_str: Schema.optional<typeof Schema.String>; old_str: Schema.optional<typeof Schema.String>; view_range: Schema.optional<Schema.Array$<typeof Schema.Number>>; }>; readonly success: typeof Schema.Void; readonly failure: typeof Schema.Never; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L345"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "TextEditor_20250429",
    "description": "Allow Claude to directly interact with your files, providing hands-on\nassistance rather than just suggesting changes.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const TextEditor_20250429: (args: {}) => Tool.ProviderDefined<\"AnthropicTextEditor\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: Schema.Literal<[\"view\", \"create\", \"str_replace\", \"insert\"]>; path: typeof Schema.String; file_text: Schema.optional<typeof Schema.String>; insert_line: Schema.optional<typeof Schema.Number>; new_str: Schema.optional<typeof Schema.String>; old_str: Schema.optional<typeof Schema.String>; view_range: Schema.optional<Schema.Array$<typeof Schema.Number>>; }>; readonly success: typeof Schema.Void; readonly failure: typeof Schema.Never; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L405"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "TextEditor_20250728",
    "description": "Allow Claude to directly interact with your files, providing hands-on\nassistance rather than just suggesting changes.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const TextEditor_20250728: (args: {}) => Tool.ProviderDefined<\"AnthropicTextEditor\", { readonly args: Schema.Struct<{}>; readonly parameters: Schema.Struct<{ command: Schema.Literal<[\"view\", \"create\", \"str_replace\", \"insert\"]>; path: typeof Schema.String; file_text: Schema.optional<typeof Schema.String>; insert_line: Schema.optional<typeof Schema.Number>; new_str: Schema.optional<typeof Schema.String>; old_str: Schema.optional<typeof Schema.String>; view_range: Schema.optional<Schema.Array$<typeof Schema.Number>>; }>; readonly success: typeof Schema.Void; readonly failure: typeof Schema.Never; }, true>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L464"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "WebSearch_20250305",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tools",
    "signature": "declare const WebSearch_20250305: (args: { readonly cache_control?: { readonly type: \"ephemeral\"; readonly ttl?: \"5m\" | \"1h\" | null | undefined; } | null | undefined; readonly allowed_domains?: ReadonlyArray<string> | null | undefined; readonly blocked_domains?: ReadonlyArray<string> | null | undefined; readonly max_uses?: number | null | undefined; readonly user_location?: { readonly type: \"approximate\"; readonly city?: string | null | undefined; readonly country?: string | null | undefined; readonly region?: string | null | undefined; readonly timezone?: string | null | undefined; } | null | undefined; }) => Tool.ProviderDefined<\"AnthropicWebSearch\", { readonly args: Schema.Struct<{ readonly cache_control: Schema.optionalWith<typeof Generated.CacheControlEphemeral, { nullable: true; }>; readonly allowed_domains: Schema.optionalWith<Schema.Array$<typeof Schema.String>, { nullable: true; }>; readonly blocked_domains: Schema.optionalWith<Schema.Array$<typeof Schema.String>, { nullable: true; }>; readonly max_uses: Schema.optionalWith<Schema.filter<typeof Schema.Int>, { nullable: true; }>; readonly user_location: Schema.optionalWith<typeof Generated.UserLocation, { nullable: true; }>; }>; readonly parameters: Schema.Struct<{}>; readonly success: Schema.Array$<typeof Generated.RequestWebSearchResultBlock>; readonly failure: typeof Generated.ResponseWebSearchToolResultError; }, false>",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L520"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "getProviderDefinedToolName",
    "description": "A helper method which takes in the name of a tool as returned in the response\nfrom a large language model provider, and returns either the provider-defined\nname for of the tool as found in the corresponding `Toolkit`, or `undefined`\nif the tool name is not a provider-defined tool.\n\nFor example, if the large language model provider returns the tool name\n`\"web_search\"` in a response, calling this method would return `\"AnthropicWebSearch\"`.\n\nThis method is primarily exposed for use by other Effect provider\nintegrations which can utilize Anthropic tools (i.e. Amazon Bedrock).",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Tool Calling",
    "signature": "declare const getProviderDefinedToolName: (name: string) => string | undefined",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L553"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AnthropicTool.ts",
      "path": "src/AnthropicTool.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ProviderDefinedTools",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "Schemas",
    "signature": "type ProviderDefinedTools = typeof ProviderDefinedTools.Type",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/AnthropicTool.ts#L41"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicClient",
    "description": "Re-exports all named exports from the \"./AnthropicClient.js\" module as `AnthropicClient`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as AnthropicClient from \"./AnthropicClient.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/index.ts#L4"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicConfig",
    "description": "Re-exports all named exports from the \"./AnthropicConfig.js\" module as `AnthropicConfig`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as AnthropicConfig from \"./AnthropicConfig.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/index.ts#L9"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicLanguageModel",
    "description": "Re-exports all named exports from the \"./AnthropicLanguageModel.js\" module as `AnthropicLanguageModel`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as AnthropicLanguageModel from \"./AnthropicLanguageModel.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/index.ts#L14"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicTokenizer",
    "description": "Re-exports all named exports from the \"./AnthropicTokenizer.js\" module as `AnthropicTokenizer`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as AnthropicTokenizer from \"./AnthropicTokenizer.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/index.ts#L19"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicTool",
    "description": "Re-exports all named exports from the \"./AnthropicTool.js\" module as `AnthropicTool`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as AnthropicTool from \"./AnthropicTool.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/index.ts#L24"
  },
  {
    "_tag": "Export",
    "module": {
      "name": "index.ts",
      "path": "src/index.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Generated",
    "description": "Re-exports all named exports from the \"./Generated.js\" module as `Generated`.",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": null,
    "signature": "export * as Generated from \"./Generated.js\"",
    "sourceUrl": "https://github.com/Effect-TS/effect/tree/main/packages/ai/anthropic/src/index.ts#L29"
  }
]