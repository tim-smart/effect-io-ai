[
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare class AnthropicClient"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "StreamChunk",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "declare class StreamChunk"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const make: (options: { readonly apiKey?: Redacted.Redacted | undefined; readonly apiUrl?: string | undefined; readonly anthropicVersion?: string; readonly organizationId?: Redacted.Redacted | undefined; readonly projectId?: Redacted.Redacted | undefined; readonly transformClient?: (client: HttpClient.HttpClient) => HttpClient.HttpClient; }) => Effect.Effect<AnthropicClient.Service, never, HttpClient.HttpClient>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layer: (options: { readonly apiKey?: Redacted.Redacted | undefined; readonly apiUrl?: string | undefined; readonly anthropicVersion?: string; readonly transformClient?: (client: HttpClient.HttpClient) => HttpClient.HttpClient; }) => Layer.Layer<AiModels.AiModels | AnthropicClient, never, HttpClient.HttpClient>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "layerConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerConfig: (options: Config.Config.Wrap<{ readonly apiKey?: Redacted.Redacted | undefined; readonly apiUrl?: string | undefined; readonly anthropicVersion?: string; readonly transformClient?: (client: HttpClient.HttpClient) => HttpClient.HttpClient; }>) => Layer.Layer<AnthropicClient, ConfigError, HttpClient.HttpClient>"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ContentPart",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface ContentPart {\n  readonly _tag: \"Content\"\n  readonly content: string\n}"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "ToolCallPart",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface ToolCallPart {\n  readonly _tag: \"ToolCall\"\n  readonly id: string\n  readonly name: string\n  readonly arguments: unknown\n}"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "UsagePart",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface UsagePart {\n  readonly _tag: \"Usage\"\n  readonly id: string\n  readonly model: string\n  readonly inputTokens: number\n  readonly outputTokens: number\n  readonly finishReasons: ReadonlyArray<string>\n}"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "StreamCompletionRequest",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "type StreamCompletionRequest = Omit<\n  typeof Generated.CreateMessageParams.Encoded,\n  \"stream\"\n>"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "StreamChunkPart",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "type StreamChunkPart = ContentPart | ToolCallPart | UsagePart"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AnthropicClient.ts",
      "path": "src/AnthropicClient.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicClient.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface Service {\n    readonly client: Generated.Client\n    readonly streamRequest: <A>(\n      request: HttpClientRequest.HttpClientRequest\n    ) => Stream.Stream<A, HttpClientError.HttpClientError>\n    readonly stream: (\n      request: StreamCompletionRequest\n    ) => Stream.Stream<StreamChunk, HttpClientError.HttpClientError>\n  }"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicCompletions.ts",
      "path": "src/AnthropicCompletions.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Config",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare class Config"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicCompletions.ts",
      "path": "src/AnthropicCompletions.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "withConfigOverride",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "configuration",
    "signature": "declare const withConfigOverride: { (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>; }"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicCompletions.ts",
      "path": "src/AnthropicCompletions.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "ai models",
    "signature": "declare const model: (model: (string & {}) | Model, config?: Omit<Config.Service, \"model\">) => AiModel.AiModel<Completions.Completions | Tokenizer.Tokenizer, AnthropicClient>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicCompletions.ts",
      "path": "src/AnthropicCompletions.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "layerCompletions",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerCompletions: (options: { readonly model: (string & {}) | Model; readonly config?: Omit<Config.Service, \"model\">; }) => Layer.Layer<Completions.Completions, never, AnthropicClient>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "AnthropicCompletions.ts",
      "path": "src/AnthropicCompletions.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layer: (options: { readonly model: (string & {}) | Model; readonly config?: Omit<Config.Service, \"model\">; }) => Layer.Layer<Completions.Completions | Tokenizer.Tokenizer, never, AnthropicClient>"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "AnthropicCompletions.ts",
      "path": "src/AnthropicCompletions.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Model",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "type Model = typeof Generated.ModelEnum.Encoded"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AnthropicCompletions.ts",
      "path": "src/AnthropicCompletions.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "Config.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "configuration",
    "signature": "export interface Service extends\n    Simplify<\n      Partial<\n        Omit<\n          typeof Generated.CreateMessageParams.Encoded,\n          \"messages\" | \"tools\" | \"tool_choice\" | \"stream\"\n        >\n      >\n    >\n  {}"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "AnthropicConfig.ts",
      "path": "src/AnthropicConfig.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare class AnthropicConfig"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicConfig.ts",
      "path": "src/AnthropicConfig.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "withClientTransform",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "configuration",
    "signature": "declare const withClientTransform: { (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>; <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>; }"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "AnthropicConfig.ts",
      "path": "src/AnthropicConfig.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "AnthropicConfig.Service",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface Service {\n    readonly transformClient?: (client: HttpClient) => HttpClient\n  }"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTokenizer.ts",
      "path": "src/AnthropicTokenizer.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructors",
    "signature": "declare const make: Tokenizer.Tokenizer.Service"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "AnthropicTokenizer.ts",
      "path": "src/AnthropicTokenizer.ts"
    },
    "project": "@effect/ai-anthropic",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layer: Layer.Layer<Tokenizer.Tokenizer, never, never>"
  }
]