[
  {
    "_tag": "Constant",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "TypeId",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "type ids",
    "signature": "declare const TypeId: unique symbol"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "SqliteClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare const SqliteClient: Context.Tag<SqliteClient, SqliteClient>"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "asyncQuery",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "fiber refs",
    "signature": "declare const asyncQuery: FiberRef.FiberRef<boolean>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "withAsyncQuery",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "fiber refs",
    "signature": "declare const withAsyncQuery: <R, E, A>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructor",
    "signature": "declare const make: (options: SqliteClientConfig) => Effect.Effect<SqliteClient, never, Scope.Scope | Reactivity.Reactivity>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "layerConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerConfig: (config: Config.Config.Wrap<SqliteClientConfig>) => Layer.Layer<SqliteClient | Client.SqlClient, ConfigError>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layer: (config: SqliteClientConfig) => Layer.Layer<SqliteClient | Client.SqlClient, ConfigError>"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "SqliteClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface SqliteClient extends Client.SqlClient {\n  readonly [TypeId]: TypeId\n  readonly config: SqliteClientConfig\n\n  /** Not supported in sqlite */\n  readonly updateValues: never\n}"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "SqliteClientConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface SqliteClientConfig {\n  readonly filename: string\n  readonly location?: string | undefined\n  readonly encryptionKey?: string | undefined\n  readonly spanAttributes?: Record<string, unknown> | undefined\n  readonly transformResultNames?: ((str: string) => string) | undefined\n  readonly transformQueryNames?: ((str: string) => string) | undefined\n}"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "TypeId",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "type ids",
    "signature": "type TypeId = typeof TypeId"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "SqliteMigrator.ts",
      "path": "src/SqliteMigrator.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "run",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructor",
    "signature": "declare const run: <R>(options: Migrator.MigratorOptions<R>) => Effect.Effect<ReadonlyArray<readonly [id: number, name: string]>, SqlError | Migrator.MigrationError, Client.SqlClient | R>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteMigrator.ts",
      "path": "src/SqliteMigrator.ts"
    },
    "project": "@effect/sql-sqlite-react-native",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructor",
    "signature": "declare const layer: <R>(options: Migrator.MigratorOptions<R>) => Layer.Layer<never, SqlError | Migrator.MigrationError, R | Client.SqlClient>"
  }
]