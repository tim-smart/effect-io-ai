[
  {
    "_tag": "Function",
    "module": {
      "name": "OpfsWorker.ts",
      "path": "src/OpfsWorker.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "run",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructor",
    "signature": "declare const run: (options: OpfsWorkerConfig) => Effect.Effect<void, SqlError>"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "OpfsWorker.ts",
      "path": "src/OpfsWorker.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "OpfsWorkerConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface OpfsWorkerConfig {\n  readonly port: EventTarget & Pick<MessagePort, \"postMessage\" | \"close\">\n  readonly dbName: string\n}"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "TypeId",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "type ids",
    "signature": "declare const TypeId: unique symbol"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "SqliteClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tags",
    "signature": "declare const SqliteClient: Context.Tag<SqliteClient, SqliteClient>"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "currentTransferables",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tranferables",
    "signature": "declare const currentTransferables: FiberRef.FiberRef<ReadonlyArray<Transferable>>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "makeMemory",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructor",
    "signature": "declare const makeMemory: (options: SqliteClientMemoryConfig) => Effect.Effect<SqliteClient, SqlError, Scope.Scope | Reactivity.Reactivity>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "make",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructor",
    "signature": "declare const make: (options: SqliteClientConfig) => Effect.Effect<SqliteClient, SqlError, Scope.Scope | Reactivity.Reactivity>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "withTransferables",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "tranferables",
    "signature": "declare const withTransferables: (transferables: ReadonlyArray<Transferable>) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "layerMemoryConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerMemoryConfig: (config: Config.Config.Wrap<SqliteClientMemoryConfig>) => Layer.Layer<SqliteClient | Client.SqlClient, ConfigError | SqlError>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "layerMemory",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerMemory: (config: SqliteClientMemoryConfig) => Layer.Layer<SqliteClient | Client.SqlClient, ConfigError | SqlError>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layer: (config: SqliteClientConfig) => Layer.Layer<SqliteClient | Client.SqlClient, ConfigError | SqlError>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "layerConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const layerConfig: (config: Config.Config.Wrap<SqliteClientConfig>) => Layer.Layer<SqliteClient | Client.SqlClient, ConfigError | SqlError>"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "SqliteClient",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface SqliteClient extends Client.SqlClient {\n  readonly [TypeId]: TypeId\n  readonly config: SqliteClientMemoryConfig\n  readonly export: Effect.Effect<Uint8Array, SqlError>\n  readonly import: (data: Uint8Array) => Effect.Effect<void, SqlError>\n\n  /** Not supported in sqlite */\n  readonly updateValues: never\n}"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "SqliteClientMemoryConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface SqliteClientMemoryConfig {\n  readonly installReactivityHooks?: boolean\n  readonly spanAttributes?: Record<string, unknown>\n  readonly transformResultNames?: (str: string) => string\n  readonly transformQueryNames?: (str: string) => string\n}"
  },
  {
    "_tag": "Interface",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "SqliteClientConfig",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "export interface SqliteClientConfig {\n  readonly worker: Effect.Effect<Worker | SharedWorker | MessagePort, never, Scope.Scope>\n  readonly installReactivityHooks?: boolean\n  readonly spanAttributes?: Record<string, unknown>\n  readonly transformResultNames?: (str: string) => string\n  readonly transformQueryNames?: (str: string) => string\n}"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "SqliteClient.ts",
      "path": "src/SqliteClient.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "TypeId",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "type ids",
    "signature": "type TypeId = typeof TypeId"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "SqliteMigrator.ts",
      "path": "src/SqliteMigrator.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "run",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructor",
    "signature": "declare const run: <R>(options: Migrator.MigratorOptions<R>) => Effect.Effect<ReadonlyArray<readonly [id: number, name: string]>, SqlError | Migrator.MigrationError, Client.SqlClient | R>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "SqliteMigrator.ts",
      "path": "src/SqliteMigrator.ts"
    },
    "project": "@effect/sql-sqlite-wasm",
    "name": "layer",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "constructor",
    "signature": "declare const layer: <R>(options: Migrator.MigratorOptions<R>) => Layer.Layer<never, SqlError | Migrator.MigrationError, R | Client.SqlClient>"
  }
]