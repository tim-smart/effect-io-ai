[
  {
    "_tag": "Function",
    "module": {
      "name": "PodsRpc.ts",
      "path": "src/PodsRpc.ts"
    },
    "project": "@effect/cluster-node",
    "name": "podsRpc",
    "description": "Given a function that resolves an RPC client, constructs a Pods service that uses RPC to communicate",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const podsRpc: <R>(buildClient: (podAddress: PodAddress.PodAddress) => RpcResolver.Client<RequestResolver.RequestResolver<Rpc.Request<ShardingServiceRpc.ShardingServiceRpcRequest>, never>>) => Layer.Layer<Pods.Pods, never, R>"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "ShardingProtocol.ts",
      "path": "src/ShardingProtocol.ts"
    },
    "project": "@effect/cluster-node",
    "name": "AssignShards",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "schema",
    "signature": "declare class AssignShards"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "ShardingProtocol.ts",
      "path": "src/ShardingProtocol.ts"
    },
    "project": "@effect/cluster-node",
    "name": "UnassignShards",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "schema",
    "signature": "declare class UnassignShards"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "ShardingProtocol.ts",
      "path": "src/ShardingProtocol.ts"
    },
    "project": "@effect/cluster-node",
    "name": "Send",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "schema",
    "signature": "declare class Send"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "ShardingProtocol.ts",
      "path": "src/ShardingProtocol.ts"
    },
    "project": "@effect/cluster-node",
    "name": "PingShard",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "schema",
    "signature": "declare class PingShard"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "ShardingServiceRpc.ts",
      "path": "src/ShardingServiceRpc.ts"
    },
    "project": "@effect/cluster-node",
    "name": "router",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "rpc",
    "signature": "declare const router: RpcRouter.RpcRouter<ShardingProtocol.AssignShards | ShardingProtocol.UnassignShards | ShardingProtocol.PingShard | ShardingProtocol.Send, Sharding.Sharding>"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "ShardingServiceRpc.ts",
      "path": "src/ShardingServiceRpc.ts"
    },
    "project": "@effect/cluster-node",
    "name": "ShardingServiceRpc",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "type ShardingServiceRpc = typeof router"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "ShardingServiceRpc.ts",
      "path": "src/ShardingServiceRpc.ts"
    },
    "project": "@effect/cluster-node",
    "name": "ShardingServiceRpcRequest",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "type ShardingServiceRpcRequest = RpcRouter.RpcRouter.Request<typeof router>"
  },
  {
    "_tag": "Function",
    "module": {
      "name": "ShardManagerClientRpc.ts",
      "path": "src/ShardManagerClientRpc.ts"
    },
    "project": "@effect/cluster-node",
    "name": "shardManagerClientRpc",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layer",
    "signature": "declare const shardManagerClientRpc: (makeClient: (shardManagerUri: string) => RpcResolver.Client<RequestResolver.RequestResolver<Rpc.Request<ShardManagerServiceRpc.ShardManagerServiceRpcRequest>, never>>) => Layer.Layer<ShardManagerClient.ShardManagerClient, never, ShardingConfig.ShardingConfig>"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "ShardManagerProtocol.ts",
      "path": "src/ShardManagerProtocol.ts"
    },
    "project": "@effect/cluster-node",
    "name": "Register",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "schema",
    "signature": "declare class Register"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "ShardManagerProtocol.ts",
      "path": "src/ShardManagerProtocol.ts"
    },
    "project": "@effect/cluster-node",
    "name": "Unregister",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "schema",
    "signature": "declare class Unregister"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "ShardManagerProtocol.ts",
      "path": "src/ShardManagerProtocol.ts"
    },
    "project": "@effect/cluster-node",
    "name": "NotifyUnhealthyPod",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "schema",
    "signature": "declare class NotifyUnhealthyPod"
  },
  {
    "_tag": "Class",
    "module": {
      "name": "ShardManagerProtocol.ts",
      "path": "src/ShardManagerProtocol.ts"
    },
    "project": "@effect/cluster-node",
    "name": "GetAssignements",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "schema",
    "signature": "declare class GetAssignements"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "ShardManagerServiceRpc.ts",
      "path": "src/ShardManagerServiceRpc.ts"
    },
    "project": "@effect/cluster-node",
    "name": "router",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "rpc",
    "signature": "declare const router: RpcRouter.RpcRouter<ShardManagerProtocolHttp.Register | ShardManagerProtocolHttp.Unregister | ShardManagerProtocolHttp.NotifyUnhealthyPod | ShardManagerProtocolHttp.GetAssignements, ShardManager.ShardManager>"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "ShardManagerServiceRpc.ts",
      "path": "src/ShardManagerServiceRpc.ts"
    },
    "project": "@effect/cluster-node",
    "name": "ShardManagerServiceRpc",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "type ShardManagerServiceRpc = typeof router"
  },
  {
    "_tag": "TypeAlias",
    "module": {
      "name": "ShardManagerServiceRpc.ts",
      "path": "src/ShardManagerServiceRpc.ts"
    },
    "project": "@effect/cluster-node",
    "name": "ShardManagerServiceRpcRequest",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "models",
    "signature": "type ShardManagerServiceRpcRequest = RpcRouter.RpcRouter.Request<typeof router>"
  },
  {
    "_tag": "Constant",
    "module": {
      "name": "StorageFile.ts",
      "path": "src/StorageFile.ts"
    },
    "project": "@effect/cluster-node",
    "name": "storageFile",
    "deprecated": false,
    "examples": [],
    "since": "1.0.0",
    "category": "layers",
    "signature": "declare const storageFile: Layer.Layer<Storage.Storage, never, never>"
  }
]